export type FormFieldSecretProps = {
    /**
     * The name/type of the secret data, e.g. "password", "CC number".
     * Appears as "Show password", "Hide CC number" etc.
     */
    accessibleCopyName?: string | undefined;
    /**
     * An error message that overrides errors produced by built-in validation.
     */
    error?: {
        message: string;
    } | undefined;
    ariaLabelText?: string | undefined;
    className?: string | undefined;
    defaultRevealed?: boolean | undefined;
    disabled?: boolean | undefined;
    helpText?: string | JSX.Element | undefined;
    label: string;
    name: string;
    onToggleSecretClick?: ((revealed: boolean) => void) | undefined;
    readonly?: boolean | undefined;
    required?: boolean | undefined;
    /**
     * @internal
     */
    [key: string]: unknown;
};
/**
 * <!-- TODO(ndhoule): Document me -->
 *
 * @internal
 */
export declare const FormFieldSecret: <FieldValues extends Record<string, unknown>>({ name, label, error, ...otherProps }: FormFieldSecretProps) => import("react").JSX.Element;
//# sourceMappingURL=FormFieldSecret.d.ts.map