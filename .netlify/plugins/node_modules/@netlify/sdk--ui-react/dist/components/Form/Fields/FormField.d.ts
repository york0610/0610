export type FormFieldProps = {
    /**
     * The type of input field to render.
     *
     * @default text
     */
    type?: "text" | "textarea" | "number" | undefined;
    /**
     * An error message that overrides errors produced by built-in validation.
     */
    error?: {
        message: string;
    } | undefined;
    accessibleCopyName?: string | undefined;
    ariaLabelText?: string | undefined;
    className?: string | undefined;
    disabled?: boolean | undefined;
    helpText?: React.ReactNode | undefined;
    label?: string | undefined;
    labelPosition?: "top" | "left" | undefined;
    name: string;
    placeholder?: string | number | undefined;
    readonly?: boolean | undefined;
    required?: boolean | undefined;
};
/**
 * <!-- TODO(ndhoule): Document me -->
 *
 * @internal
 */
export declare const FormField: <FieldValues extends Record<string, unknown>>({ labelPosition, type, name, error, ...otherProps }: FormFieldProps) => import("react").JSX.Element;
//# sourceMappingURL=FormField.d.ts.map