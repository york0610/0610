{"version":3,"file":"Alert.js","sources":["../../../src/components/Alert/Alert.tsx"],"sourcesContent":["import { type IconName } from \"../SvgProvider.jsx\";\nimport { Alert as BaseAlert } from \"../vendor/Alert/index.js\";\n\nexport type AlertProps = {\n  /**\n   * Content to render within the element.\n   */\n  children?: React.ReactNode | undefined;\n\n  /**\n   * A class property to attach to the element.\n   *\n   * @see {@link !Element.className}\n   */\n  className?: string | undefined;\n  /**\n   * The name of an icon to render on the left side of the alert content.\n   *\n   * When not specified, an icon will be displayed that matches the specified `type`.\n   */\n  icon?: IconName | undefined;\n\n  /**\n   * An identifier to attach to the element.\n   *\n   * @see {@link !Element.id}\n   */\n  id?: string | undefined;\n\n  /**\n   * A callback invoked when a user clicks the alert's close button. (The close button is rendered\n   * only when an `onClose` callback is specified.)\n   */\n  onClose?: (() => void) | undefined;\n\n  title?: string | undefined;\n\n  /**\n   * The type of alert to show to the user.\n   *\n   * @default info\n   */\n  type?: \"error\" | \"info\" | \"success\" | \"warn\";\n};\n\n/**\n * An `Alert` calls a user's attention to important information. It can be used to call out helpful\n * information, warn users, or report an error.\n *\n * ![Alert info variant](./screenshots/alert_info.png)\n * ![Alert warn variant](./screenshots/alert_warn.png)\n * ![Alert error variant](./screenshots/alert_error.png)\n *\n * @param props\n * @example\n * ```tsx\n * import { Alert } from \"@netlify/sdk/ui/react/components\";\n *\n * <Alert type=\"info\">I contain an error.</Alert>\n * <Alert type=\"warn\">I contain a warning.</Alert>\n * <Alert type=\"error\">I contain an error.</Alert>\n * ```\n */\nexport const Alert = ({\n  type = \"info\",\n  children,\n  onClose,\n  icon,\n  ...otherProps\n}: AlertProps) => (\n  <BaseAlert\n    error={type === \"error\" ? children : undefined}\n    info={type === \"info\" ? children : undefined}\n    success={type === \"success\" ? children : undefined}\n    warning={type === \"warn\" ? children : undefined}\n    onDismiss={onClose}\n    iconName={icon}\n    {...otherProps}\n  />\n);\n"],"names":["BaseAlert"],"mappings":";;;;AA+DO,MAAM,QAAQ,CAAC;AAAA,EACpB,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MACE;AAAA,EAACA;AAAAA,EAAA;AAAA,IACC,OAAO,SAAS,UAAU,WAAW;AAAA,IACrC,MAAM,SAAS,SAAS,WAAW;AAAA,IACnC,SAAS,SAAS,YAAY,WAAW;AAAA,IACzC,SAAS,SAAS,SAAS,WAAW;AAAA,IACtC,WAAW;AAAA,IACX,UAAU;AAAA,IACT,GAAG;AAAA,EAAA;AACN;"}