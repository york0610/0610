{"version":3,"file":"use-resize-observer.js","sources":["../../src/index.tsx","../../node_modules/@react-hook/passive-layout-effect/dist/module/index.js","../../node_modules/@react-hook/latest/dist/module/index.js"],"sourcesContent":["/* eslint-disable no-return-assign */\n/* eslint-disable no-underscore-dangle */\nimport * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\n/**\n * A React hook that fires a callback whenever ResizeObserver detects a change to its size\n *\n * @param target A React ref created by `useRef()` or an HTML element\n * @param callback Invoked with a single `ResizeObserverEntry` any time\n *   the `target` resizes\n */\nfunction useResizeObserver<T extends Element>(\n  target: React.RefObject<T> | React.ForwardedRef<T> | T | null,\n  callback: UseResizeObserverCallback,\n  options: UseResizeObserverOptions = {}\n): ResizeObserver {\n  const resizeObserver = getResizeObserver(options.polyfill)\n  const storedCallback = useLatest(callback)\n\n  useLayoutEffect(() => {\n    let didUnsubscribe = false\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return () => {}\n\n    function cb(entry: ResizeObserverEntry, observer: ResizeObserver) {\n      if (didUnsubscribe) return\n      storedCallback.current(entry, observer)\n    }\n\n    resizeObserver.subscribe(targetEl as Element, cb)\n\n    return () => {\n      didUnsubscribe = true\n      resizeObserver.unsubscribe(targetEl as Element, cb)\n    }\n  }, [target, resizeObserver, storedCallback])\n\n  return resizeObserver.observer\n}\n\nfunction createResizeObserver(polyfill?: any) {\n  let ticking = false\n  let allEntries: ResizeObserverEntry[] = []\n\n  const callbacks: Map<any, Array<UseResizeObserverCallback>> = new Map()\n\n  const observer = new (polyfill || window.ResizeObserver)(\n    (entries: ResizeObserverEntry[], obs: ResizeObserver) => {\n      allEntries = allEntries.concat(entries)\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          const triggered = new Set<Element>()\n          for (let i = 0; i < allEntries.length; i++) {\n            if (triggered.has(allEntries[i].target)) continue\n            triggered.add(allEntries[i].target)\n            const cbs = callbacks.get(allEntries[i].target)\n            cbs?.forEach((cb) => cb(allEntries[i], obs))\n          }\n          allEntries = []\n          ticking = false\n        })\n      }\n      ticking = true\n    }\n  )\n\n  return {\n    observer,\n    subscribe(target: Element, callback: UseResizeObserverCallback) {\n      observer.observe(target)\n      const cbs = callbacks.get(target) ?? []\n      cbs.push(callback)\n      callbacks.set(target, cbs)\n    },\n    unsubscribe(target: Element, callback: UseResizeObserverCallback) {\n      const cbs = callbacks.get(target) ?? []\n      if (cbs.length === 1) {\n        observer.unobserve(target)\n        callbacks.delete(target)\n        return\n      }\n      const cbIndex = cbs.indexOf(callback)\n      if (cbIndex !== -1) cbs.splice(cbIndex, 1)\n      callbacks.set(target, cbs)\n    },\n  }\n}\n\nlet _resizeObserver: ReturnType<typeof createResizeObserver>\n\nconst getResizeObserver = (polyfill: any) =>\n  !_resizeObserver\n    ? (_resizeObserver = createResizeObserver(polyfill))\n    : _resizeObserver\n\nexport type UseResizeObserverCallback = (\n  entry: ResizeObserverEntry,\n  observer: ResizeObserver\n) => any\n\nexport type UseResizeObserverOptions = {polyfill?: any}\nexport default useResizeObserver\n","import * as React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  storedValue.current = current;\n  return storedValue;\n};\n\nexport default useLatest;"],"names":["_ref","_resizeObserver","usePassiveLayoutEffect","React","document","createElement","target","callback","options","current","storedValue","polyfill","resizeObserver","ticking","allEntries","callbacks","Map","observer","window","ResizeObserver","entries","obs","concat","requestAnimationFrame","triggered","Set","_loop","i","has","add","cbs","get","forEach","cb","length","subscribe","_callbacks$get","observe","push","set","unsubscribe","_callbacks$get2","unobserve","delete","cbIndex","indexOf","splice","createResizeObserver","storedCallback","useRef","useLayoutEffect","entry","didUnsubscribe","targetEl"],"mappings":"kjBAwB0B,SAAAA,IAAO,KAkE7BC,SCzFEC,EAAyBC,EAA0B,oBAAbC,eAAuD,IAA3BA,SAASC,cAA2B,kBAAoB,oBDYhI,SACEC,EACAC,EACAC,QAAiC,IAAjCA,IAAAA,EAAoC,CAAA,GAEpC,IEhBgBC,EACVC,EFyFmBC,EA1EnBC,GA0EmBD,EA1EgBH,EAAQG,SA2EhDV,IACIA,EApDP,SAA8BU,GAC5B,IAAIE,EAAU,EACVC,EAAoC,GAElCC,EAAwD,IAAIC,IAE5DC,EAAW,IAAKN,GAAYO,OAAOC,iBACvC,SAACC,EAAgCC,GAC/BP,EAAaA,EAAWQ,OAAOF,GAC1BP,GACHK,OAAOK,uBAAsB,WAE3B,IADA,IAAMC,EAAY,IAAIC,IAAcC,EAAAA,SAC3BC,GACP,GAAIH,EAAUI,IAAId,EAAWa,GAAGrB,QAAS,MAAA,WACzCkB,EAAUK,IAAIf,EAAWa,GAAGrB,QAC5B,IAAMwB,EAAMf,EAAUgB,IAAIjB,EAAWa,GAAGrB,QACxCwB,SAAAA,EAAKE,SAAQ,SAACC,GAAE,OAAKA,EAAGnB,EAAWa,GAAIN,KAAK,EAJrCM,EAAI,EAAGA,EAAIb,EAAWoB,OAAQP,IAAKD,EAAnCC,GAMTb,EAAa,GACbD,EAAU,CACZ,IAEFA,EAAU,CACZ,IAGF,MAAO,CACLI,SAAAA,EACAkB,UAASA,SAAC7B,EAAiBC,GAAqC,IAAA6B,EAC9DnB,EAASoB,QAAQ/B,GACjB,IAAMwB,EAA2BM,QAAxBA,EAAGrB,EAAUgB,IAAIzB,UAAO8B,IAAAA,EAAAA,EAAI,GACrCN,EAAIQ,KAAK/B,GACTQ,EAAUwB,IAAIjC,EAAQwB,EACvB,EACDU,YAAWA,SAAClC,EAAiBC,GAAqC,IAAAkC,EAC1DX,EAA2BW,QAAxBA,EAAG1B,EAAUgB,IAAIzB,UAAOmC,IAAAA,EAAAA,EAAI,GACrC,GAAmB,IAAfX,EAAII,OAGN,OAFAjB,EAASyB,UAAUpC,QACnBS,EAAU4B,OAAOrC,GAGnB,IAAMsC,EAAUd,EAAIe,QAAQtC,IACX,IAAbqC,GAAgBd,EAAIgB,OAAOF,EAAS,GACxC7B,EAAUwB,IAAIjC,EAAQwB,EACxB,EAEJ,CAMyBiB,CAAqBpC,KA3EtCqC,GEjBUvC,EFiBiBF,GEhB3BG,EAAcP,EAAM8C,OAAOxC,IACrBA,QAAUA,EACfC,GFkCP,OAlBAwC,GAAgB,WAKd,SAASjB,EAAGkB,EAA4BlC,GAClCmC,GACJJ,EAAevC,QAAQ0C,EAAOlC,EAChC,CAPA,IAAImC,EAAiB,EACfC,EAAW/C,GAAU,YAAaA,EAASA,EAAOG,QAAUH,EAClE,OAAK+C,GAOLzC,EAAeuB,UAAUkB,EAAqBpB,GAEvC,WACLmB,EAAiB,EACjBxC,EAAe4B,YAAYa,EAAqBpB,KAXnCjC,CAahB,GAAE,CAACM,EAAQM,EAAgBoC,IAErBpC,EAAeK,QACxB"}