"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const helpers_format = require("./format.cjs");
const starter$1 = { "title": "Your team has been changed to a Starter plan.", "subtitle": "Features specific to your previous plan are no longer available.", "url": "https://www.netlify.com/pricing/", "linkText": "Learn more about the Starter plan" };
const pro = { "title": "Your team has been changed to a Pro plan.", "url": "https://www.netlify.com/pricing/", "linkText": "Learn more about the Pro plan" };
const enterprise$1 = { "title": "You requested an Enterprise plan.", "subtitle": "Someone from our Sales team will get in touch with you shortly. If you have further questions or donâ€™t receive our reply, you can email us at ", "url": "mailto:sales@netlify.com", "linkText": "sales@netlify.com" };
const plansChange = {
  "free-is-free": { "title": "Your team has been downgraded to a Free plan.", "subtitle": "Designed for light usage, the Free plan is really free. No overages. No surprise bills.", "url": "https://www.netlify.com/pricing/", "linkText": "Learn more about the Free plan" },
  starter: starter$1,
  pro,
  enterprise: enterprise$1
};
const plansInfo = [
  {
    plans: [
      "free-is-free"
    ],
    features: [
      "Single member plan",
      "1 concurrent build",
      "Global serverless network",
      "100 GB bandwidth/month",
      "300 build minutes/month",
      "Continuous deployment",
      "125,000 function and 1,000,000 edge function invocations",
      "10 GB storage",
      "Visual editor",
      "And more, with no overage charges ever"
    ]
  },
  {
    plans: [
      "starter",
      "orb-starter",
      "india-starter"
    ],
    features: [
      "Everything in Free plan, plus usage flexibility:",
      "Unrestricted bandwidth",
      "Unrestricted build minutes",
      "Unrestricted function invocations",
      "Unrestricted Edge Functions",
      "Unrestricted form submissions",
      "Add-on: Analytics"
    ]
  },
  {
    plans: [
      "pro-v4",
      "orb-pro",
      "india-pro"
    ],
    features: [
      "Starter features plus:",
      "Background Functions",
      "Password-protected sites",
      "1TB bandwidth and 25k build minutes",
      "Audit logs with 7-day history",
      "Shared environment variables",
      "Support for organization-owned private Git repos",
      "Slack & email notifications",
      "Email support"
    ]
  },
  {
    plans: [
      "business-v4",
      "orb-business",
      "india-business"
    ],
    features: [
      "Pro features, plus:",
      "5 concurrent builds",
      "1.5 TB bandwidth/month",
      "35k build minutes/month",
      "Billing Admin role",
      "Self-hosted GitHub/GitLab integration",
      "Security: SSO, RBAC, DDoS mitigation",
      "Full audit log history"
    ]
  },
  {
    plans: [
      "agency-marketing-site-benefit"
    ],
    features: [
      "Pro features, plus:",
      "5 free seats",
      "5 concurrent builds",
      "1.5 TB bandwidth/month",
      "35k build minutes/month",
      "Billing Admin role",
      "Self-hosted GitHub/GitLab integration",
      "Security: SSO, RBAC, DDoS mitigation",
      "Full audit log history"
    ]
  },
  {
    plans: [
      "enterprise",
      "enterprise-trial"
    ],
    features: [
      "Pro features, plus:",
      "99.99% uptime SLA",
      "24x7x365 Premium support",
      "Enterprise-grade global edge network",
      "Unlimited teams with org-level controls",
      "SAML single sign-on",
      "1.5TB bandwidth and 35k build minutes",
      "High-Performance Build with SLAs",
      "Log Drains",
      "Secrets Controller",
      "Support for GitHub Enterprise Server",
      "Support for self-managed GitLab",
      "Support for Bitbucket Data Center and Server",
      "Security & compliance review",
      "Pentesting & load testing"
    ]
  }
];
const plansLimits = [
  {
    plans: [
      "free-is-free",
      "starter",
      "orb-starter",
      "india-starter",
      "legacy-multiplayer-starter"
    ],
    limits: [
      "300 build minutes",
      "100 GB bandwidth",
      "1M Edge Function invocations",
      "1 concurrent build",
      "500 sites"
    ]
  },
  {
    plans: [
      "pro-v4",
      "orb-pro",
      "india-pro",
      "opensource",
      "legacy"
    ],
    limits: [
      "25,000 build minutes",
      "1 TB bandwidth",
      "2M Edge Function invocations",
      "3 concurrent builds",
      "500 sites"
    ]
  },
  {
    plans: [
      "business-v4",
      "orb-business",
      "india-business"
    ],
    limits: [
      "35,000 build minutes",
      "1.5 TB bandwidth",
      "5M Edge Function invocations",
      "5 concurrent builds",
      "500 sites"
    ]
  },
  {
    plans: [
      "agency-marketing-site-benefit"
    ],
    limits: [
      "5 free team members",
      "35,000 build minutes",
      "1.5 TB bandwidth",
      "5M Edge Function invocations",
      "5 concurrent builds",
      "500 sites"
    ]
  },
  {
    plans: [
      "business-v2"
    ],
    limits: [
      "10 free team members",
      "35,000 build minutes",
      "1.5 TB bandwidth",
      "5 concurrent builds",
      "5M Edge Function invocations"
    ]
  },
  {
    plans: [
      "covid19",
      "public-good"
    ],
    limits: [
      "Unlimited build minutes",
      "Unlimited bandwidth",
      "2M Edge Function invocations",
      "3 concurrent builds"
    ]
  },
  {
    plans: [
      "free-personal"
    ],
    limits: [
      "300 build minutes",
      "100 GB bandwidth",
      "1 concurrent build"
    ]
  },
  {
    plans: [
      "netlifriend",
      "opensource-unlimited"
    ],
    limits: [
      "Unlimited build minutes",
      "Unlimited bandwidth",
      "5M Edge Function invocations",
      "5 concurrent builds"
    ]
  },
  {
    plans: [
      "netlify-testing"
    ],
    limits: [
      "Unlimited build minutes",
      "500 GB bandwidth",
      "5M Edge Function invocations",
      "3 concurrent builds"
    ]
  },
  {
    plans: [
      "personal"
    ],
    limits: [
      "300 build minutes",
      "100 GB bandwidth",
      "1 concurrent build"
    ]
  },
  {
    plans: [
      "pro-v1"
    ],
    limits: [
      "25,000 build minutes",
      "1 TB bandwidth",
      "2M Edge Function invocations",
      "3 concurrent builds"
    ]
  },
  {
    plans: [
      "enterprise-trial"
    ],
    limits: [
      "35,000 build minutes",
      "1.5 TB bandwidth",
      "5M Edge Function invocations",
      "5 concurrent builds",
      "500 sites"
    ]
  },
  {
    plans: [
      "enterprise",
      "enterprise-v2"
    ],
    limits: [
      "Contract limits"
    ]
  }
];
const starter = 1;
const personal = 1;
const opensource = 2;
const covid19 = 2;
const legacy = 2;
const netlifriend = 3;
const enterprise = 4;
const plansRanking = {
  "free-is-free": 1,
  starter,
  "orb-starter": 1,
  "india-starter": 1,
  personal,
  "free-personal": 1,
  "legacy-multiplayer-starter": 1,
  "pro-v4": 2,
  "india-pro": 2,
  "orb-pro": 2,
  opensource,
  "opensource-unlimited": 2,
  "pro-v1": 2,
  covid19,
  legacy,
  "public-good": 2,
  "orb-business": 3,
  "india-business": 3,
  "business-v4": 3,
  "agency-marketing-site-benefit": 3,
  netlifriend,
  "business-v2": 3,
  enterprise,
  "enterprise-v2": 4,
  "enterprise-trial": 4,
  "netlify-testing": 4
};
const FREE_NAME = "Free";
const FREE_SLUG = "free-is-free";
const ORB_STARTER_NAME = "Starter";
const ORB_STARTER_SLUG = "orb-starter";
const ORB_PRO_NAME = "Pro";
const ORB_PRO_SLUG = "orb-pro";
const ORB_BUSINESS_NAME = "Business";
const ORB_BUSINESS_SLUG = "orb-business";
const ORB_INDIA_STARTER_NAME = "India Starter";
const ORB_INDIA_STARTER_SLUG = "india-starter";
const ORB_INDIA_PRO_NAME = "India Pro";
const ORB_INDIA_PRO_SLUG = "india-pro";
const ORB_INDIA_BUSINESS_NAME = "India Business";
const ORB_INDIA_BUSINESS_SLUG = "india-business";
const STARTER_NAME = "Starter";
const STARTER_SLUG = "starter";
const PRO_NAME = "Pro";
const PRO_SLUG = "pro-v4";
const BUSINESS_NAME = "Business";
const BUSINESS_SLUG = "business-v4";
const ENTERPRISE_NAME = "Enterprise";
const ENTERPRISE_SLUG = "enterprise";
const ENTERPRISE_GRID_NAME = "Enterprise";
const ENTERPRISE_GRID_SLUG = "enterprise-v2";
const NETLIFRIEND_NAME = "Netlifriend";
const NETLIFRIEND_SLUG = "netlifriend";
const OPEN_SOURCE_NAME = "Open Source";
const OPEN_SOURCE_SLUG = "opensource";
const OPEN_SOURCE_UNLIMITED_NAME = "Open Source Unlimited";
const OPEN_SOURCE_UNLIMITED_SLUG = "opensource-unlimited";
const AGENCY_BENEFIT_NAME = "Agency Marketing Site Benefit";
const AGENCY_BENEFIT_SLUG = "agency-marketing-site-benefit";
const PUBLIC_GOOD_NAME = "Public Good";
const PUBLIC_GOOD_SLUG = "public-good";
const LEGACY_MULTIPLAYER_STARTER_NAME = "Starter (Legacy)";
const LEGACY_MULTIPLAYER_STARTER_SLUG = "legacy-multiplayer-starter";
const PRO_LEGACY_NAME = "Pro (Legacy)";
const PRO_LEGACY_SLUG = "pro-v1";
const BUSINESS_LEGACY_NAME = "Business (Legacy)";
const BUSINESS_LEGACY_SLUG = "business-v2";
const ENTERPRISE_TRIAL_NAME = "Enterprise";
const ENTERPRISE_TRIAL_SLUG = "enterprise-trial";
const COVID19_NAME = "COVID-19 Support";
const COVID19_SLUG = "covid19";
const FREE_PERSONAL_NAME = "Free personal team";
const FREE_PERSONAL_SLUG = "free-personal";
const PERSONAL_SLUG = "personal";
const PERSONAL_NAME = "personal";
const NETLIFY_TESTING_NAME = "Netlify Team Testing";
const NETLIFY_TESTING_SLUG = "netlify-testing";
const LEGACY_CREATE_PLAN_UI_NAME = "Legacy";
const LEGACY_CREATE_PLAN_UI_SLUG = "legacy";
const CREATE_FREE_SLUG = "2023a-free";
const CREATE_PRO_SLUG = "2023b-business";
const CREATE_ENTERPRISE_SLUG = "2022b-business";
const PRO_V4_ID = "5ed6c554f0f6d000bb4dd075";
const ORB_PRO_ID = "5578334277324e6959523542";
const PRO_V4_PRICE = 19;
const getStandardPlanNames = () => [
  FREE_NAME,
  STARTER_NAME,
  PRO_NAME,
  BUSINESS_NAME,
  ENTERPRISE_NAME,
  LEGACY_CREATE_PLAN_UI_NAME
];
const isPlanIndia = (planSlug = "") => {
  return [
    ORB_INDIA_STARTER_SLUG,
    ORB_INDIA_PRO_SLUG,
    ORB_INDIA_BUSINESS_SLUG
  ].includes(planSlug);
};
const isPlanFree = (planSlug = "") => planSlug === FREE_SLUG;
const isPlanStarter = (planSlug = "") => {
  return [
    STARTER_SLUG,
    ORB_STARTER_SLUG,
    LEGACY_MULTIPLAYER_STARTER_SLUG
  ].includes(planSlug);
};
const isPlanFreeOrStarter = (planSlug = "") => isPlanFree(planSlug) || isPlanStarter(planSlug);
const isPlanPro = (planSlug = "") => {
  return [PRO_SLUG, ORB_PRO_SLUG, ORB_INDIA_PRO_SLUG].includes(planSlug);
};
const isPlanBusiness = (planSlug = "") => {
  return [BUSINESS_SLUG, ORB_BUSINESS_SLUG, ORB_INDIA_BUSINESS_SLUG].includes(
    planSlug
  );
};
const isPlanEnterprise = (planSlug = "") => planSlug === ENTERPRISE_SLUG;
const isPlanEnterpriseTrial = (planSlug = "") => planSlug === ENTERPRISE_TRIAL_SLUG;
const isPlanEnterpriseGrid = (planSlug = "") => planSlug === ENTERPRISE_GRID_SLUG;
const isPlanEnterpriseLevel = (planSlug = "") => isPlanEnterprise(planSlug) || isPlanEnterpriseTrial(planSlug) || isPlanEnterpriseGrid(planSlug);
const isPlanOpenSource = (planSlug = "") => planSlug === OPEN_SOURCE_SLUG;
const isPlanOpenSourceUnlimited = (planSlug = "") => planSlug === OPEN_SOURCE_UNLIMITED_SLUG;
const isPlanTypeOpenSource = (planSlug = "") => isPlanOpenSource(planSlug) || isPlanOpenSourceUnlimited(planSlug);
const isPlanAgencyBenefit = (planSlug = "") => planSlug === AGENCY_BENEFIT_SLUG;
const isPlanNetlifriend = (planSlug = "") => planSlug === NETLIFRIEND_SLUG;
const isPlanPublicGood = (planSlug = "") => planSlug === PUBLIC_GOOD_SLUG;
const isPlanLegacyMultiplayerStarter = (planSlug = "") => planSlug === LEGACY_MULTIPLAYER_STARTER_SLUG;
const isPlanLegacyCreate = (planSlug = "") => planSlug === LEGACY_CREATE_PLAN_UI_SLUG;
const normalizeTeamPlanName = (planName) => planName == null ? void 0 : planName.toLowerCase().replace(PERSONAL_SLUG, STARTER_SLUG);
const humanizePlanName = (planName) => {
  return planName ? planName.split("_").map(helpers_format.capitalize).join(" ") : "";
};
const isPlanRankedHigher = (planSlug, targetRank) => {
  const rank = planSlug ? plansRanking[planSlug] || -1 : -1;
  return rank >= targetRank;
};
const isPlanProOrHigher = (planSlug) => isPlanRankedHigher(planSlug, 2);
const isPlanBusinessOrHigher = (planSlug) => isPlanRankedHigher(planSlug, 3);
const isPlanEnterpriseOrHigher = (planSlug) => isPlanRankedHigher(planSlug, 4);
const isPlanOrb = (planSlug = "") => {
  return [
    ORB_STARTER_SLUG,
    ORB_PRO_SLUG,
    ORB_BUSINESS_SLUG,
    ORB_INDIA_STARTER_SLUG,
    ORB_INDIA_PRO_SLUG,
    ORB_INDIA_BUSINESS_SLUG,
    LEGACY_MULTIPLAYER_STARTER_SLUG
  ].includes(planSlug);
};
const isPlanSelfServe = (planSlug = "") => {
  return [
    FREE_SLUG,
    STARTER_SLUG,
    PRO_SLUG,
    BUSINESS_SLUG,
    ORB_STARTER_SLUG,
    ORB_PRO_SLUG,
    ORB_BUSINESS_SLUG,
    ORB_INDIA_STARTER_SLUG,
    ORB_INDIA_PRO_SLUG,
    ORB_INDIA_BUSINESS_SLUG,
    ENTERPRISE_TRIAL_SLUG
  ].includes(planSlug);
};
const isPlanStandard = (planSlug = "") => {
  return [
    FREE_SLUG,
    STARTER_SLUG,
    PRO_SLUG,
    ENTERPRISE_SLUG,
    ORB_STARTER_SLUG,
    ORB_PRO_SLUG,
    ORB_INDIA_STARTER_SLUG,
    ORB_INDIA_PRO_SLUG
  ].includes(planSlug);
};
const isPlanScheduledDowngrade = (planSlug = "") => {
  return [
    ORB_PRO_SLUG,
    ORB_INDIA_PRO_SLUG,
    ORB_BUSINESS_SLUG,
    ORB_INDIA_BUSINESS_SLUG
  ].includes(planSlug);
};
const isPlanValidForLockedAccounts = (planSlug = "") => {
  return [PRO_SLUG, ORB_PRO_SLUG, ORB_INDIA_PRO_SLUG, ENTERPRISE_SLUG].includes(
    planSlug
  );
};
const getAccountCreatePlan = (planSlug) => {
  if (!planSlug) return CREATE_FREE_SLUG;
  if (isPlanEnterpriseLevel(planSlug)) return CREATE_ENTERPRISE_SLUG;
  if (isPlanPro(planSlug) || isPlanBusiness(planSlug)) return CREATE_PRO_SLUG;
  return CREATE_FREE_SLUG;
};
const getPlanCapabilities = (planSlug) => {
  if (!planSlug) return [];
  const planInfo = plansInfo.find((plan) => plan.plans.includes(planSlug));
  if (!planInfo) return [];
  return planInfo.features;
};
const getPlanCapabilitiesForUI = (planSlug = "") => {
  if (!planSlug) return [];
  const planLimits = plansLimits.find((plan) => plan.plans.includes(planSlug));
  if (!planLimits) return [];
  return planLimits.limits;
};
const getCreatePlanCapabilities = (planSlug = "") => {
  if (planSlug === CREATE_FREE_SLUG)
    return [
      "2 Visual Editor presets",
      "Restart delay after Visual Editor hibernation"
    ];
  if (planSlug === CREATE_PRO_SLUG)
    return [
      "100 Visual Editor presets",
      "Immediate restart after Visual Editor hibernation"
    ];
  if (planSlug === CREATE_ENTERPRISE_SLUG)
    return [
      "Unlimited Visual Editor presets",
      "Immediate restart after Visual Editor hibernation"
    ];
  return [];
};
const getPlanChangeInfo = (planSlug) => {
  if (isPlanFree(planSlug)) return plansChange[FREE_SLUG];
  if (isPlanStarter(planSlug)) return plansChange[STARTER_SLUG];
  if (isPlanPro(planSlug)) return plansChange[PRO_SLUG];
  if (isPlanEnterprise(planSlug)) return plansChange[ENTERPRISE_SLUG];
  return null;
};
const getPlanMemberMonthlyPrice = (plan) => {
  if (!plan) return "0";
  return plan.member_monthly_dollar_price || plan.monthly_seats_addon_dollar_price || "0";
};
exports.AGENCY_BENEFIT_NAME = AGENCY_BENEFIT_NAME;
exports.AGENCY_BENEFIT_SLUG = AGENCY_BENEFIT_SLUG;
exports.BUSINESS_LEGACY_NAME = BUSINESS_LEGACY_NAME;
exports.BUSINESS_LEGACY_SLUG = BUSINESS_LEGACY_SLUG;
exports.BUSINESS_NAME = BUSINESS_NAME;
exports.BUSINESS_SLUG = BUSINESS_SLUG;
exports.COVID19_NAME = COVID19_NAME;
exports.COVID19_SLUG = COVID19_SLUG;
exports.CREATE_ENTERPRISE_SLUG = CREATE_ENTERPRISE_SLUG;
exports.CREATE_FREE_SLUG = CREATE_FREE_SLUG;
exports.CREATE_PRO_SLUG = CREATE_PRO_SLUG;
exports.ENTERPRISE_GRID_NAME = ENTERPRISE_GRID_NAME;
exports.ENTERPRISE_GRID_SLUG = ENTERPRISE_GRID_SLUG;
exports.ENTERPRISE_NAME = ENTERPRISE_NAME;
exports.ENTERPRISE_SLUG = ENTERPRISE_SLUG;
exports.ENTERPRISE_TRIAL_NAME = ENTERPRISE_TRIAL_NAME;
exports.ENTERPRISE_TRIAL_SLUG = ENTERPRISE_TRIAL_SLUG;
exports.FREE_NAME = FREE_NAME;
exports.FREE_PERSONAL_NAME = FREE_PERSONAL_NAME;
exports.FREE_PERSONAL_SLUG = FREE_PERSONAL_SLUG;
exports.FREE_SLUG = FREE_SLUG;
exports.LEGACY_CREATE_PLAN_UI_NAME = LEGACY_CREATE_PLAN_UI_NAME;
exports.LEGACY_CREATE_PLAN_UI_SLUG = LEGACY_CREATE_PLAN_UI_SLUG;
exports.LEGACY_MULTIPLAYER_STARTER_NAME = LEGACY_MULTIPLAYER_STARTER_NAME;
exports.LEGACY_MULTIPLAYER_STARTER_SLUG = LEGACY_MULTIPLAYER_STARTER_SLUG;
exports.NETLIFRIEND_NAME = NETLIFRIEND_NAME;
exports.NETLIFRIEND_SLUG = NETLIFRIEND_SLUG;
exports.NETLIFY_TESTING_NAME = NETLIFY_TESTING_NAME;
exports.NETLIFY_TESTING_SLUG = NETLIFY_TESTING_SLUG;
exports.OPEN_SOURCE_NAME = OPEN_SOURCE_NAME;
exports.OPEN_SOURCE_SLUG = OPEN_SOURCE_SLUG;
exports.OPEN_SOURCE_UNLIMITED_NAME = OPEN_SOURCE_UNLIMITED_NAME;
exports.OPEN_SOURCE_UNLIMITED_SLUG = OPEN_SOURCE_UNLIMITED_SLUG;
exports.ORB_BUSINESS_NAME = ORB_BUSINESS_NAME;
exports.ORB_BUSINESS_SLUG = ORB_BUSINESS_SLUG;
exports.ORB_INDIA_BUSINESS_NAME = ORB_INDIA_BUSINESS_NAME;
exports.ORB_INDIA_BUSINESS_SLUG = ORB_INDIA_BUSINESS_SLUG;
exports.ORB_INDIA_PRO_NAME = ORB_INDIA_PRO_NAME;
exports.ORB_INDIA_PRO_SLUG = ORB_INDIA_PRO_SLUG;
exports.ORB_INDIA_STARTER_NAME = ORB_INDIA_STARTER_NAME;
exports.ORB_INDIA_STARTER_SLUG = ORB_INDIA_STARTER_SLUG;
exports.ORB_PRO_ID = ORB_PRO_ID;
exports.ORB_PRO_NAME = ORB_PRO_NAME;
exports.ORB_PRO_SLUG = ORB_PRO_SLUG;
exports.ORB_STARTER_NAME = ORB_STARTER_NAME;
exports.ORB_STARTER_SLUG = ORB_STARTER_SLUG;
exports.PERSONAL_NAME = PERSONAL_NAME;
exports.PERSONAL_SLUG = PERSONAL_SLUG;
exports.PRO_LEGACY_NAME = PRO_LEGACY_NAME;
exports.PRO_LEGACY_SLUG = PRO_LEGACY_SLUG;
exports.PRO_NAME = PRO_NAME;
exports.PRO_SLUG = PRO_SLUG;
exports.PRO_V4_ID = PRO_V4_ID;
exports.PRO_V4_PRICE = PRO_V4_PRICE;
exports.PUBLIC_GOOD_NAME = PUBLIC_GOOD_NAME;
exports.PUBLIC_GOOD_SLUG = PUBLIC_GOOD_SLUG;
exports.STARTER_NAME = STARTER_NAME;
exports.STARTER_SLUG = STARTER_SLUG;
exports.getAccountCreatePlan = getAccountCreatePlan;
exports.getCreatePlanCapabilities = getCreatePlanCapabilities;
exports.getPlanCapabilities = getPlanCapabilities;
exports.getPlanCapabilitiesForUI = getPlanCapabilitiesForUI;
exports.getPlanChangeInfo = getPlanChangeInfo;
exports.getPlanMemberMonthlyPrice = getPlanMemberMonthlyPrice;
exports.getStandardPlanNames = getStandardPlanNames;
exports.humanizePlanName = humanizePlanName;
exports.isPlanAgencyBenefit = isPlanAgencyBenefit;
exports.isPlanBusiness = isPlanBusiness;
exports.isPlanBusinessOrHigher = isPlanBusinessOrHigher;
exports.isPlanEnterprise = isPlanEnterprise;
exports.isPlanEnterpriseGrid = isPlanEnterpriseGrid;
exports.isPlanEnterpriseLevel = isPlanEnterpriseLevel;
exports.isPlanEnterpriseOrHigher = isPlanEnterpriseOrHigher;
exports.isPlanEnterpriseTrial = isPlanEnterpriseTrial;
exports.isPlanFree = isPlanFree;
exports.isPlanFreeOrStarter = isPlanFreeOrStarter;
exports.isPlanIndia = isPlanIndia;
exports.isPlanLegacyCreate = isPlanLegacyCreate;
exports.isPlanLegacyMultiplayerStarter = isPlanLegacyMultiplayerStarter;
exports.isPlanNetlifriend = isPlanNetlifriend;
exports.isPlanOpenSource = isPlanOpenSource;
exports.isPlanOpenSourceUnlimited = isPlanOpenSourceUnlimited;
exports.isPlanOrb = isPlanOrb;
exports.isPlanPro = isPlanPro;
exports.isPlanProOrHigher = isPlanProOrHigher;
exports.isPlanPublicGood = isPlanPublicGood;
exports.isPlanScheduledDowngrade = isPlanScheduledDowngrade;
exports.isPlanSelfServe = isPlanSelfServe;
exports.isPlanStandard = isPlanStandard;
exports.isPlanStarter = isPlanStarter;
exports.isPlanTypeOpenSource = isPlanTypeOpenSource;
exports.isPlanValidForLockedAccounts = isPlanValidForLockedAccounts;
exports.normalizeTeamPlanName = normalizeTeamPlanName;
//# sourceMappingURL=plans.cjs.map
