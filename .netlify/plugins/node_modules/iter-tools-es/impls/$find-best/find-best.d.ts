import { Wrappable } from '../../types/iterable';
declare function findBest<T>(comparer: (best: T, value: T) => boolean): (iterable: Wrappable<T>) => T | undefined;
declare function findBest<T>(comparer: (best: T, value: T) => boolean, iterable: Wrappable<T>): T | undefined;
declare function findBest<T, S>(comparer: (best: S, value: S) => boolean, mapper: (value: T, i: number) => S): (iterable: Wrappable<T>) => T | undefined;
declare function findBest<T, S>(comparer: (best: S, value: S) => boolean, mapper: (value: T, i: number) => S, iterable: Wrappable<T>): T | undefined;
export { findBest };