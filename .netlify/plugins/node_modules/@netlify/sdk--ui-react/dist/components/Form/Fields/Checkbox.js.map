{"version":3,"file":"Checkbox.js","sources":["../../../../src/components/Form/Fields/Checkbox.tsx"],"sourcesContent":["import {\n  Controller,\n  type FieldValues as TFieldValues,\n  type Path,\n  type PathValue,\n  useFormContext,\n} from \"react-hook-form\";\nimport BaseCheckbox from \"../../vendor/Checkbox.jsx\";\n\nexport type CheckboxProps<FieldValues extends TFieldValues> = {\n  /**\n   * If `true`, the component is disabled.\n   *\n   * @default false\n   */\n  disabled?: boolean | undefined;\n\n  /**\n   * An error message to display below the element when in an invalid state.\n   */\n  error?: { message?: string | undefined } | undefined;\n\n  /**\n   * Explanatory text to render below the element.\n   */\n  helpText?: React.ReactNode | undefined;\n\n  /**\n   * A user-friendly label displayed alongside the element.\n   */\n  label: string;\n\n  /**\n   * A unique name identifying the element within a form.\n   */\n  name: Path<FieldValues>;\n\n  /**\n   * When `true`, the element will be invalid when touched and unchecked.\n   *\n   * @default false\n   */\n  required?: boolean | undefined;\n};\n\n/**\n * Checkboxes give users a binary choice from a set of options.\n *\n * <!-- TODO(ndhoule): Add a screenshot here -->\n *\n * @param props\n * @see {@link Form}\n * @example\n * ```ts\n * import { Checkbox } from \"@netlify/sdk/react/components\";\n *\n * <Checkbox />\n * ```\n */\nexport const Checkbox = <FieldValues extends TFieldValues>({\n  name,\n  label,\n  helpText,\n  error,\n  required,\n  ...otherProps\n}: CheckboxProps<FieldValues>) => {\n  const { control } = useFormContext<FieldValues>();\n\n  return (\n    <Controller\n      control={control}\n      defaultValue={false as PathValue<FieldValues, Path<FieldValues>>}\n      name={name}\n      render={({ field, fieldState }) => {\n        return (\n          <BaseCheckbox\n            label={label}\n            controlledChecked={Boolean(field.value)}\n            helpText={helpText}\n            error={error?.message ?? fieldState.error?.message}\n            required={required}\n            {...otherProps}\n            {...field}\n          />\n        );\n      }}\n    />\n  );\n};\n"],"names":[],"mappings":";;;AA2DO,MAAM,WAAW,CAAmC;AAAA,EACzD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAkC;AAChC,QAAM,EAAE,QAAA,IAAY,eAAA;AAEpB,SACE;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,cAAc;AAAA,MACd;AAAA,MACA,QAAQ,CAAC,EAAE,OAAO,iBAAiB;;AACjC,eACE;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA,mBAAmB,QAAQ,MAAM,KAAK;AAAA,YACtC;AAAA,YACA,QAAO,+BAAO,cAAW,gBAAW,UAAX,mBAAkB;AAAA,YAC3C;AAAA,YACC,GAAG;AAAA,YACH,GAAG;AAAA,UAAA;AAAA,QAAA;AAAA,MAGV;AAAA,IAAA;AAAA,EAAA;AAGN;"}