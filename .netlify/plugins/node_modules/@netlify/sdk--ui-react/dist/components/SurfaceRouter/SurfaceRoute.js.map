{"version":3,"file":"SurfaceRoute.js","sources":["../../../src/components/SurfaceRouter/SurfaceRoute.tsx"],"sourcesContent":["import { Surfaces } from \"@netlify/sdk--ui-core\";\nimport { useCurrentSurface } from \"./SurfaceRouterContext.jsx\";\n\nexport type SurfaceRouteProps = {\n  /**\n   * Content to render within the element.\n   */\n  children?: React.ReactNode | undefined;\n\n  /**\n   *\n   *\n   * @see {@link Surfaces}\n   */\n  surface: Surfaces;\n};\n\n/**\n * A component that, when used within a {@link SurfaceRouter `SurfaceRouter`}, conditionally renders\n * its children based on which surface the extension UI is currently rendering for the user.\n *\n * @param props\n * @see {@link SurfaceRouter}\n * @see {@link @netlify/sdk/react!Surfaces | Surfaces}\n * @example\n * ```tsx\n * import { Surfaces } from \"@netlify/sdk/react\";\n * import { SurfaceRoute, SurfaceRouter } from \"@netlify/sdk/react/components\";\n *\n * <SurfaceRouter>\n *   <SurfaceRoute surface={Surfaces.SiteConfiguration}>\n *     <SiteConfigurationSurface />\n *   </SurfaceRoute>\n * </SurfaceRouter>\n * ```\n */\nexport const SurfaceRoute = ({ children, surface }: SurfaceRouteProps) => {\n  const currentSurface = useCurrentSurface();\n  return surface === currentSurface ? children : null;\n};\n"],"names":[],"mappings":";;AAoCO,MAAM,eAAe,CAAC,EAAE,UAAU,cAAiC;AACxE,QAAM,iBAAiB,kBAAA;AACvB,SAAO,YAAY,iBAAiB,WAAW;AACjD;"}