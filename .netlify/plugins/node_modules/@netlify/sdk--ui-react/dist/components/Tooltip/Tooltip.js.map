{"version":3,"file":"Tooltip.js","sources":["../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import {\n  Tooltip as BaseTooltip,\n  type TooltipProps as BaseTooltipProps,\n} from \"@netlify/ui\";\nimport React from \"react\";\n\nconst mapTypeToIntent = (\n  type: Exclude<TooltipProps[\"type\"], undefined>,\n): BaseTooltipProps[\"intent\"] => {\n  switch (type) {\n    case \"warn\":\n      return \"warning\";\n    case \"info\":\n    case \"error\":\n      return type;\n  }\n};\n\nexport type TooltipProps = {\n  children?: React.ReactNode | undefined;\n  className?: string | undefined;\n  contents?: React.ReactNode | undefined;\n  disabled?: boolean | undefined;\n  id?: string | undefined;\n  type?: \"error\" | \"info\" | \"warn\";\n};\n\nexport const Tooltip = ({\n  children,\n  contents,\n  type,\n  ...otherProps\n}: TooltipProps) => (\n  <BaseTooltip\n    description={contents}\n    intent={type !== undefined ? mapTypeToIntent(type) : undefined}\n    {...otherProps}\n  >\n    {/* @ts-expect-error XXX(ndhoule): BaseTooltipProps.children type is incorrect */}\n    {children}\n  </BaseTooltip>\n);\n"],"names":["BaseTooltip"],"mappings":";;;AAMA,MAAM,kBAAkB,CACtB,SAC+B;AAC/B,UAAQ,MAAA;AAAA,IACN,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,EAAA;AAEb;AAWO,MAAM,UAAU,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MACE;AAAA,EAACA;AAAAA,EAAA;AAAA,IACC,aAAa;AAAA,IACb,QAAQ,SAAS,SAAY,gBAAgB,IAAI,IAAI;AAAA,IACpD,GAAG;AAAA,IAGH;AAAA,EAAA;AACH;"}