{"version":3,"file":"Button.js","sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["import { Button as BaseButton } from \"@netlify/ui\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../classnames.js\";\n\nexport type ButtonButtonProps = {\n  /**\n   * Content to render within the element.\n   */\n  children?: React.ReactNode | undefined;\n\n  /**\n   * A class property to attach to the element.\n   *\n   * @see {@link !Element.className}\n   */\n  className?: string | undefined;\n\n  /**\n   * If `true`, the component is disabled.\n   *\n   * @default false\n   */\n  disabled?: boolean | undefined;\n\n  /**\n   * @default primary\n   */\n  level?: \"primary\" | \"secondary\" | \"tertiary\" | undefined;\n\n  onClick?:\n    | React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>\n    | undefined;\n\n  /**\n   * If `true`, the component animates and is disabled.\n   *\n   * @default false\n   */\n  loading?: boolean | undefined;\n\n  /**\n   * @see {@link !HTMLButtonElement}\n   * @default button\n   */\n  type?: React.ComponentPropsWithoutRef<\"button\">[\"type\"];\n\n  /**\n   * @default standard\n   */\n  variant?: \"standard\" | \"danger\" | \"pop\" | undefined;\n};\n\nexport type AnchorButtonProps = Omit<ButtonButtonProps, \"type\"> & {\n  href?: React.ComponentPropsWithoutRef<\"a\">[\"href\"] | undefined;\n  rel?: React.ComponentPropsWithoutRef<\"a\">[\"rel\"] | undefined;\n  target?: React.ComponentPropsWithoutRef<\"a\">[\"target\"] | undefined;\n};\n\n/**\n * @see {@link AnchorButtonProps}\n * @see {@link ButtonButtonProps}\n */\nexport type ButtonProps = AnchorButtonProps | ButtonButtonProps;\n\n/**\n * Buttons are controls that let users take actions and confirm choices.\n *\n * ![Button](./screenshots/button.png)\n *\n * @param props\n * @see {@link ButtonGroup}\n * @see {@link !HTMLButtonElement}\n * @example\n * A Button can render as a standard `<button>` element:\n * ```tsx\n * import { Button } from \"@netlify/sdk/react/components\";\n *\n * <Button onClick={() => console.log(\"Clicked!\")}>Click me!</Button>\n * ```\n * @example\n * A Button can also render as a link (`<a>`) element:\n * ```tsx\n * import { Button } from \"@netlify/sdk/react/components\";\n *\n * <Button href=\"https://www.google.com/\">Google</Button>\n * ```\n */\nexport const Button = forwardRef(function Button(\n  { className, loading = false, ...otherProps }: ButtonProps,\n  ref: React.ForwardedRef<HTMLAnchorElement | HTMLButtonElement>,\n) {\n  return (\n    <BaseButton\n      ref={ref}\n      className={cn(\"tw-self-start\", className)}\n      saving={loading}\n      {...otherProps}\n    />\n  );\n});\n"],"names":["Button","BaseButton"],"mappings":";;;;AAuFO,MAAM,SAAS,WAAW,SAASA,QACxC,EAAE,WAAW,UAAU,OAAO,GAAG,WAAA,GACjC,KACA;AACA,SACE;AAAA,IAACC;AAAAA,IAAA;AAAA,MACC;AAAA,MACA,WAAW,GAAG,iBAAiB,SAAS;AAAA,MACxC,QAAQ;AAAA,MACP,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV,CAAC;"}