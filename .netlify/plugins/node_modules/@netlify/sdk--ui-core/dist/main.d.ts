export { type BaseMessage, createEventTargetReader, type CreateEventTargetReaderOptions, createEventTargetWriter, type CreateEventTargetWriterOptions, createMessageChannel, createWindowMessageReader, type CreateWindowMessageReaderOptions, createWindowMessageWriter, type CreateWindowMessageWriterOptions, type MessageChannel, type MessageReader, type MessageWriter, withReaderTransform, } from "./message_channel/main.js";
export { createUIExtensionHostInitializeEvent, createUIExtensionHostRequestDimensionsEvent, createUIExtensionHostUpdateContextEvent, createUIExtensionSurfaceConnectProviderEvent, createUIExtensionSurfaceDisconnectProviderEvent, createUIExtensionSurfaceInitializeEvent, createUIExtensionSurfaceRequestTerminationEvent, createUIExtensionSurfaceResizeEvent, UI_EXTENSION_HOST_INITIALIZE_EVENT_TYPE, UI_EXTENSION_HOST_REQUEST_DIMENSIONS_EVENT_TYPE, UI_EXTENSION_HOST_UPDATE_CONTEXT_EVENT_TYPE, UI_EXTENSION_SURFACE_CONNECT_PROVIDER_EVENT_TYPE, UI_EXTENSION_SURFACE_DISCONNECT_PROVIDER_EVENT_TYPE, UI_EXTENSION_SURFACE_INITIALIZE_EVENT_TYPE, UI_EXTENSION_SURFACE_REQUEST_DIMENSIONS_EVENT_TYPE, UI_EXTENSION_SURFACE_REQUEST_TERMINATION_EVENT_TYPE, type UIExtensionHostEvent, UIExtensionHostEventSchema, type UIExtensionHostEventType, type UIExtensionHostInitializeEvent, UIExtensionHostInitializeEventSchema, type UIExtensionHostRequestDimensionsEvent, UIExtensionHostRequestDimensionsEventSchema, type UIExtensionHostUpdateContextEvent, UIExtensionHostUpdateContextEventSchema, type UIExtensionSurfaceConnectProviderEvent, UIExtensionSurfaceConnectProviderEventSchema, type UIExtensionSurfaceDisconnectProviderEvent, UIExtensionSurfaceDisconnectProviderEventSchema, type UIExtensionSurfaceEvent, UIExtensionSurfaceEventSchema, type UIExtensionSurfaceInitializeEvent, UIExtensionSurfaceInitializeEventSchema, type UIExtensionSurfaceRequestTerminationEvent, UIExtensionSurfaceRequestTerminationEventSchema, UIExtensionSurfaceResizeEventSchema, } from "./message_schema/main.js";
export { deserializeExtensionScopes, ExtensionAction, ExtensionResource, ExtensionScope, extensionScopeComparator, humanizeExtensionAction, humanizeExtensionResource, isValidExtensionScope, listExtensionScopes, parseExtensionScopeToResourceAndAction, serializeExtensionScopes, } from "./scopes.js";
export { createSDK, initializeSDK, type InitializeSDKOptions, type NetlifySDK, } from "./sdk/sdk.js";
export { Surfaces } from "./surfaces.js";
//# sourceMappingURL=main.d.ts.map