{"version":3,"file":"FormFieldSecret.js","sources":["../../../../src/components/Form/Fields/FormFieldSecret.tsx"],"sourcesContent":["import { Controller, type Path, useFormContext } from \"react-hook-form\";\nimport { default as BaseFormFieldSecret } from \"../../vendor/FormFieldSecret.jsx\";\n\nexport type FormFieldSecretProps = {\n  /**\n   * The name/type of the secret data, e.g. \"password\", \"CC number\".\n   * Appears as \"Show password\", \"Hide CC number\" etc.\n   */\n  accessibleCopyName?: string | undefined;\n\n  /**\n   * An error message that overrides errors produced by built-in validation.\n   */\n  error?: { message: string } | undefined;\n\n  ariaLabelText?: string | undefined;\n  className?: string | undefined;\n  defaultRevealed?: boolean | undefined;\n  disabled?: boolean | undefined;\n  helpText?: string | JSX.Element | undefined;\n  label: string;\n  name: string;\n  onToggleSecretClick?: ((revealed: boolean) => void) | undefined;\n  readonly?: boolean | undefined;\n  required?: boolean | undefined;\n\n  /**\n   * @internal\n   */\n  [key: string]: unknown;\n};\n\n/**\n * <!-- TODO(ndhoule): Document me -->\n *\n * @internal\n */\nexport const FormFieldSecret = <FieldValues extends Record<string, unknown>>({\n  name,\n  label,\n  error,\n  ...otherProps\n}: FormFieldSecretProps) => {\n  const { control } = useFormContext<FieldValues>();\n\n  return (\n    <Controller\n      name={name as unknown as Path<FieldValues>}\n      control={control}\n      render={({ field, fieldState }) => {\n        return (\n          <BaseFormFieldSecret\n            label={label}\n            error={error?.message ?? fieldState.error?.message}\n            {...otherProps}\n            {...field}\n          />\n        );\n      }}\n    />\n  );\n};\n"],"names":[],"mappings":";;;AAqCO,MAAM,kBAAkB,CAA8C;AAAA,EAC3E;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAA4B;AAC1B,QAAM,EAAE,QAAA,IAAY,eAAA;AAEpB,SACE;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA,QAAQ,CAAC,EAAE,OAAO,iBAAiB;;AACjC,eACE;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA,QAAO,+BAAO,cAAW,gBAAW,UAAX,mBAAkB;AAAA,YAC1C,GAAG;AAAA,YACH,GAAG;AAAA,UAAA;AAAA,QAAA;AAAA,MAGV;AAAA,IAAA;AAAA,EAAA;AAGN;"}