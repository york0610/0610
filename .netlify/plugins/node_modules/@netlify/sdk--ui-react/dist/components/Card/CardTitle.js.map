{"version":3,"file":"CardTitle.js","sources":["../../../src/components/Card/CardTitle.tsx"],"sourcesContent":["import { type IconName } from \"../SvgProvider.js\";\nimport { CardTitle as BaseCardTitle } from \"../vendor/Card/CardTitle.js\";\n\nexport type CardTitleProps = {\n  /**\n   * A React component or the name of an HTML tag used to render the element.\n   *\n   * @default h1\n   */\n  as?: React.ElementType | undefined;\n\n  /**\n   * Content to render within the element.\n   */\n  children?: React.ReactNode | undefined;\n\n  /**\n   * A class property to attach to the element.\n   *\n   * @see {@link !Element.className}\n   */\n  className?: string | undefined;\n\n  /**\n   * If `true`, the component is disabled.\n   *\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * The name of an icon to render at the beginning of the title content.\n   */\n  iconName?: IconName | undefined;\n\n  /**\n   * An identifier to attach to the element.\n   *\n   * @see {@link !Element.id}\n   */\n  id?: string | undefined;\n\n  /**\n   * Whether to render the content as an inline element.\n   *\n   * @default false\n   */\n  inline?: boolean | undefined;\n};\n\n/**\n * A title element that can be rendered within a Card.\n *\n * ![Card title](./screenshots/card.png)\n *\n * @param props\n * @see {@link CardTitle}\n * @see {@link CardFooter}\n */\nexport const CardTitle = (props: CardTitleProps) => (\n  <BaseCardTitle {...props} />\n);\n"],"names":["BaseCardTitle"],"mappings":";;;;AA2DO,MAAM,YAAY,CAAC,UACxB,oBAACA,aAAA,EAAe,GAAG,MAAA,CAAO;"}