{"version":3,"file":"plans.js","sources":["../../../../libs/ui/src/helpers/plans.ts"],"sourcesContent":["import { capitalize } from './format';\nimport plansChange from './plans-change.json';\nimport plansInfo from './plans-info.json';\nimport plansLimits from './plans-limits.json';\nimport plansRanking from './plans-ranking.json';\n\n// Free plan (no billing)\nexport const FREE_NAME = 'Free';\nexport const FREE_SLUG = 'free-is-free';\n\n// Orb standard plans\nexport const ORB_STARTER_NAME = 'Starter';\nexport const ORB_STARTER_SLUG = 'orb-starter';\n\nexport const ORB_PRO_NAME = 'Pro';\nexport const ORB_PRO_SLUG = 'orb-pro';\n\nexport const ORB_BUSINESS_NAME = 'Business';\nexport const ORB_BUSINESS_SLUG = 'orb-business';\n\n// India plans\nexport const ORB_INDIA_STARTER_NAME = 'India Starter';\nexport const ORB_INDIA_STARTER_SLUG = 'india-starter';\n\nexport const ORB_INDIA_PRO_NAME = 'India Pro';\nexport const ORB_INDIA_PRO_SLUG = 'india-pro';\n\nexport const ORB_INDIA_BUSINESS_NAME = 'India Business';\nexport const ORB_INDIA_BUSINESS_SLUG = 'india-business';\n\n// Zuora plans\nexport const STARTER_NAME = 'Starter';\nexport const STARTER_SLUG = 'starter';\n\nexport const PRO_NAME = 'Pro';\nexport const PRO_SLUG = 'pro-v4';\n\nexport const BUSINESS_NAME = 'Business';\nexport const BUSINESS_SLUG = 'business-v4';\n\nexport const ENTERPRISE_NAME = 'Enterprise';\nexport const ENTERPRISE_SLUG = 'enterprise';\n\nexport const ENTERPRISE_GRID_NAME = 'Enterprise';\nexport const ENTERPRISE_GRID_SLUG = 'enterprise-v2';\n\n// Non-standard plan\nexport const NETLIFRIEND_NAME = 'Netlifriend';\nexport const NETLIFRIEND_SLUG = 'netlifriend';\n\nexport const OPEN_SOURCE_NAME = 'Open Source';\nexport const OPEN_SOURCE_SLUG = 'opensource';\n\nexport const OPEN_SOURCE_UNLIMITED_NAME = 'Open Source Unlimited';\nexport const OPEN_SOURCE_UNLIMITED_SLUG = 'opensource-unlimited';\n\nexport const AGENCY_BENEFIT_NAME = 'Agency Marketing Site Benefit';\nexport const AGENCY_BENEFIT_SLUG = 'agency-marketing-site-benefit';\n\nexport const PUBLIC_GOOD_NAME = 'Public Good';\nexport const PUBLIC_GOOD_SLUG = 'public-good';\n\n// Legacy plans\nexport const LEGACY_MULTIPLAYER_STARTER_NAME = 'Starter (Legacy)';\nexport const LEGACY_MULTIPLAYER_STARTER_SLUG = 'legacy-multiplayer-starter';\n\nexport const PRO_LEGACY_NAME = 'Pro (Legacy)';\nexport const PRO_LEGACY_SLUG = 'pro-v1';\n\nexport const BUSINESS_LEGACY_NAME = 'Business (Legacy)';\nexport const BUSINESS_LEGACY_SLUG = 'business-v2';\n\nexport const ENTERPRISE_TRIAL_NAME = 'Enterprise';\nexport const ENTERPRISE_TRIAL_SLUG = 'enterprise-trial';\n\nexport const COVID19_NAME = 'COVID-19 Support';\nexport const COVID19_SLUG = 'covid19';\n\nexport const FREE_PERSONAL_NAME = 'Free personal team';\nexport const FREE_PERSONAL_SLUG = 'free-personal';\n\nexport const PERSONAL_SLUG = 'personal';\nexport const PERSONAL_NAME = 'personal';\n\nexport const NETLIFY_TESTING_NAME = 'Netlify Team Testing';\nexport const NETLIFY_TESTING_SLUG = 'netlify-testing';\n\n/*\n * Legacy plan: Created when Create customers were migrated to Netlify\n * Delete when all \"bitballoon-legacy-plan-label-for-create-customers\" accounts are migrated.\n */\nexport const LEGACY_CREATE_PLAN_UI_NAME = 'Legacy';\nexport const LEGACY_CREATE_PLAN_UI_SLUG = 'legacy';\n\n// Create plan slugs\nexport const CREATE_FREE_SLUG = '2023a-free';\nexport const CREATE_PRO_SLUG = '2023b-business';\nexport const CREATE_ENTERPRISE_SLUG = '2022b-business';\n\n/*\n * We are using the ID and base price for \"pro-v4\" so that the\n * UpgradeModal (for Zuora plans) can use them.\n * This is because UpgradeModal only lets you upgrade to a Pro plan\n * And we need to provide the ID and price for the Pro plan.\n * We could get it from the available list of plans, but that involves\n * a lot of prop drilling in a lot of places.\n * It's easier to just hardcode it here.\n * This code should be removed once we've migrated to Orb.\n */\nexport const PRO_V4_ID = '5ed6c554f0f6d000bb4dd075';\nexport const ORB_PRO_ID = '5578334277324e6959523542';\nexport const PRO_V4_PRICE = 19;\n\nexport type AccountPlanData = {\n  on_pro_trial: boolean;\n  type_name: string;\n  type_slug: string;\n};\n\nexport const getStandardPlanNames = () => [\n  FREE_NAME,\n  STARTER_NAME,\n  PRO_NAME,\n  BUSINESS_NAME,\n  ENTERPRISE_NAME,\n  LEGACY_CREATE_PLAN_UI_NAME,\n];\n\nexport const isPlanIndia = (planSlug: string = ''): boolean => {\n  return [\n    ORB_INDIA_STARTER_SLUG,\n    ORB_INDIA_PRO_SLUG,\n    ORB_INDIA_BUSINESS_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanFree = (planSlug: string = ''): boolean =>\n  planSlug === FREE_SLUG;\n\nexport const isPlanStarter = (planSlug: string = ''): boolean => {\n  return [\n    STARTER_SLUG,\n    ORB_STARTER_SLUG,\n    LEGACY_MULTIPLAYER_STARTER_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanFreeOrStarter = (planSlug: string = ''): boolean =>\n  isPlanFree(planSlug) || isPlanStarter(planSlug);\n\nexport const isPlanPro = (planSlug: string = ''): boolean => {\n  return [PRO_SLUG, ORB_PRO_SLUG, ORB_INDIA_PRO_SLUG].includes(planSlug);\n};\n\nexport const isPlanBusiness = (planSlug: string = ''): boolean => {\n  return [BUSINESS_SLUG, ORB_BUSINESS_SLUG, ORB_INDIA_BUSINESS_SLUG].includes(\n    planSlug\n  );\n};\n\nexport const isPlanEnterprise = (planSlug: string = ''): boolean =>\n  planSlug === ENTERPRISE_SLUG;\n\nexport const isPlanEnterpriseTrial = (planSlug: string = ''): boolean =>\n  planSlug === ENTERPRISE_TRIAL_SLUG;\n\nexport const isPlanEnterpriseGrid = (planSlug: string = ''): boolean =>\n  planSlug === ENTERPRISE_GRID_SLUG;\n\nexport const isPlanEnterpriseLevel = (planSlug: string = ''): boolean =>\n  isPlanEnterprise(planSlug) ||\n  isPlanEnterpriseTrial(planSlug) ||\n  isPlanEnterpriseGrid(planSlug);\n\nexport const isPlanOpenSource = (planSlug: string = ''): boolean =>\n  planSlug === OPEN_SOURCE_SLUG;\n\nexport const isPlanOpenSourceUnlimited = (planSlug: string = ''): boolean =>\n  planSlug === OPEN_SOURCE_UNLIMITED_SLUG;\n\nexport const isPlanTypeOpenSource = (planSlug: string = ''): boolean =>\n  isPlanOpenSource(planSlug) || isPlanOpenSourceUnlimited(planSlug);\n\nexport const isPlanAgencyBenefit = (planSlug: string = ''): boolean =>\n  planSlug === AGENCY_BENEFIT_SLUG;\n\nexport const isPlanNetlifriend = (planSlug: string = ''): boolean =>\n  planSlug === NETLIFRIEND_SLUG;\n\nexport const isPlanPublicGood = (planSlug: string = ''): boolean =>\n  planSlug === PUBLIC_GOOD_SLUG;\n\nexport const isPlanLegacyMultiplayerStarter = (\n  planSlug: string = ''\n): boolean => planSlug === LEGACY_MULTIPLAYER_STARTER_SLUG;\n\nexport const isPlanLegacyCreate = (planSlug: string = ''): boolean =>\n  planSlug === LEGACY_CREATE_PLAN_UI_SLUG;\n\nexport const normalizeTeamPlanName = (planName?: string) =>\n  planName?.toLowerCase().replace(PERSONAL_SLUG, STARTER_SLUG);\n\nexport const humanizePlanName = (planName?: string) => {\n  return planName ? planName.split('_').map(capitalize).join(' ') : '';\n};\n\nconst isPlanRankedHigher = (\n  planSlug: string | undefined,\n  targetRank: number\n): boolean => {\n  const rank = planSlug ? plansRanking[planSlug] || -1 : -1;\n  return rank >= targetRank;\n};\n\nexport const isPlanProOrHigher = (planSlug?: string): boolean =>\n  isPlanRankedHigher(planSlug, 2);\n\nexport const isPlanBusinessOrHigher = (planSlug?: string): boolean =>\n  isPlanRankedHigher(planSlug, 3);\n\nexport const isPlanEnterpriseOrHigher = (planSlug?: string): boolean =>\n  isPlanRankedHigher(planSlug, 4);\n\nexport const isPlanOrb = (planSlug: string = ''): boolean => {\n  return [\n    ORB_STARTER_SLUG,\n    ORB_PRO_SLUG,\n    ORB_BUSINESS_SLUG,\n    ORB_INDIA_STARTER_SLUG,\n    ORB_INDIA_PRO_SLUG,\n    ORB_INDIA_BUSINESS_SLUG,\n    LEGACY_MULTIPLAYER_STARTER_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanSelfServe = (planSlug: string = ''): boolean => {\n  return [\n    FREE_SLUG,\n    STARTER_SLUG,\n    PRO_SLUG,\n    BUSINESS_SLUG,\n    ORB_STARTER_SLUG,\n    ORB_PRO_SLUG,\n    ORB_BUSINESS_SLUG,\n    ORB_INDIA_STARTER_SLUG,\n    ORB_INDIA_PRO_SLUG,\n    ORB_INDIA_BUSINESS_SLUG,\n    ENTERPRISE_TRIAL_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanStandard = (planSlug: string = ''): boolean => {\n  return [\n    FREE_SLUG,\n    STARTER_SLUG,\n    PRO_SLUG,\n    ENTERPRISE_SLUG,\n    ORB_STARTER_SLUG,\n    ORB_PRO_SLUG,\n    ORB_INDIA_STARTER_SLUG,\n    ORB_INDIA_PRO_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanScheduledDowngrade = (planSlug: string = ''): boolean => {\n  return [\n    ORB_PRO_SLUG,\n    ORB_INDIA_PRO_SLUG,\n    ORB_BUSINESS_SLUG,\n    ORB_INDIA_BUSINESS_SLUG,\n  ].includes(planSlug);\n};\n\nexport const isPlanValidForLockedAccounts = (\n  planSlug: string = ''\n): boolean => {\n  return [PRO_SLUG, ORB_PRO_SLUG, ORB_INDIA_PRO_SLUG, ENTERPRISE_SLUG].includes(\n    planSlug\n  );\n};\n\nexport const getAccountCreatePlan = (planSlug?: string): string => {\n  if (!planSlug) return CREATE_FREE_SLUG;\n  // We don't have the actual information so we return the expected plan:\n  if (isPlanEnterpriseLevel(planSlug)) return CREATE_ENTERPRISE_SLUG;\n  if (isPlanPro(planSlug) || isPlanBusiness(planSlug)) return CREATE_PRO_SLUG;\n  return CREATE_FREE_SLUG;\n};\n\nexport const getPlanCapabilities = (planSlug?: string): string[] => {\n  if (!planSlug) return [];\n  const planInfo = plansInfo.find((plan) => plan.plans.includes(planSlug));\n  if (!planInfo) return [];\n  return planInfo.features;\n};\n\nexport const getPlanCapabilitiesForUI = (planSlug: string = ''): string[] => {\n  if (!planSlug) return [];\n  const planLimits = plansLimits.find((plan) => plan.plans.includes(planSlug));\n  if (!planLimits) return [];\n  return planLimits.limits;\n};\n\nexport const getCreatePlanCapabilities = (planSlug: string = '') => {\n  if (planSlug === CREATE_FREE_SLUG)\n    return [\n      '2 Visual Editor presets',\n      'Restart delay after Visual Editor hibernation',\n    ];\n  if (planSlug === CREATE_PRO_SLUG)\n    return [\n      '100 Visual Editor presets',\n      'Immediate restart after Visual Editor hibernation',\n    ];\n  if (planSlug === CREATE_ENTERPRISE_SLUG)\n    return [\n      'Unlimited Visual Editor presets',\n      'Immediate restart after Visual Editor hibernation',\n    ];\n  return [];\n};\n\nexport const getPlanChangeInfo = (planSlug?: string) => {\n  if (isPlanFree(planSlug)) return plansChange[FREE_SLUG];\n  if (isPlanStarter(planSlug)) return plansChange[STARTER_SLUG];\n  if (isPlanPro(planSlug)) return plansChange[PRO_SLUG];\n  if (isPlanEnterprise(planSlug)) return plansChange[ENTERPRISE_SLUG];\n  return null;\n};\n\nexport const getPlanMemberMonthlyPrice = (\n  plan?:\n    | {\n        member_monthly_dollar_price?: string | undefined;\n        monthly_seats_addon_dollar_price: string;\n      }\n    | undefined\n): string => {\n  if (!plan) return '0';\n  return (\n    plan.member_monthly_dollar_price ||\n    plan.monthly_seats_addon_dollar_price ||\n    '0'\n  );\n};\n"],"names":[],"mappings":"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"}