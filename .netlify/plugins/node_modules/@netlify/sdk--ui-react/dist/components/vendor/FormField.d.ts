import { IconName } from '@netlify/ui';
import { ChangeEvent, HTMLProps, ReactElement } from 'react';

declare const noop: (_e: Event | FocusEvent | ChangeEvent<HTMLInputElement>) => void;
type ModifiedHTMLInputElementInterface = Omit<HTMLProps<HTMLInputElement>, "label">;
export interface FormFieldProps extends ModifiedHTMLInputElementInterface {
    preventTyping?: boolean;
    onFocus?: typeof noop;
    onBlur?: typeof noop;
    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;
    absolute?: false;
    checkbox?: false;
    control?: ReactElement;
    helpText?: any;
    tooltip?: any;
    controlled?: any;
    error?: any;
    type?: any;
    defaultValue?: any;
    placeholder?: any;
    disabled?: any;
    required?: any;
    readOnly?: any;
    prefix?: any;
    suffix?: any;
    onValidate?: any;
    contentType?: string;
    focused?: boolean;
    visuallyHideLabel?: boolean;
    secondary?: any;
    fullMaxWidth?: any;
    floatingLabel?: boolean;
    floatingTip?: boolean;
    iconLabel?: IconName;
    compact?: boolean;
    helpTextTiny?: boolean;
    pattern?: any;
    value?: any;
    label?: string | ReactElement;
    rows?: number;
    minLength?: number;
    leftLabel?: boolean;
}
declare const _default: import('react').ForwardRefExoticComponent<Omit<FormFieldProps, "ref"> & import('react').RefAttributes<HTMLInputElement | HTMLTextAreaElement>>;
export default _default;
//# sourceMappingURL=FormField.d.ts.map