{"version":3,"file":"Form.js","sources":["../../../../../node_modules/.pnpm/@hookform+resolvers@3.9.0_react-hook-form@7.52.0_react@18.2.0_/node_modules/@hookform/resolvers/dist/resolvers.mjs","../../../../../node_modules/.pnpm/@hookform+resolvers@3.9.0_react-hook-form@7.52.0_react@18.2.0_/node_modules/@hookform/resolvers/zod/dist/zod.mjs","../../../src/components/Form/Form.tsx"],"sourcesContent":["import{get as t,set as e}from\"react-hook-form\";const s=(e,s,o)=>{if(e&&\"reportValidity\"in e){const r=t(o,s);e.setCustomValidity(r&&r.message||\"\"),e.reportValidity()}},o=(t,e)=>{for(const o in e.fields){const r=e.fields[o];r&&r.ref&&\"reportValidity\"in r.ref?s(r.ref,o,t):r.refs&&r.refs.forEach(e=>s(e,o,t))}},r=(s,r)=>{r.shouldUseNativeValidation&&o(s,r);const f={};for(const o in s){const n=t(r.fields,o),a=Object.assign(s[o]||{},{ref:n&&n.ref});if(i(r.names||Object.keys(s),o)){const s=Object.assign({},t(f,o));e(s,\"root\",a),e(f,o,s)}else e(f,o,a)}return f},i=(t,e)=>t.some(t=>t.startsWith(e+\".\"));export{r as toNestErrors,o as validateFieldsNatively};\n//# sourceMappingURL=resolvers.mjs.map\n","import{validateFieldsNatively as r,toNestErrors as e}from\"@hookform/resolvers\";import{appendErrors as o}from\"react-hook-form\";var n=function(r,e){for(var n={};r.length;){var t=r[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"unionErrors\"in t){var u=t.unionErrors[0].errors[0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"unionErrors\"in t&&t.unionErrors.forEach(function(e){return e.errors.forEach(function(e){return r.push(e)})}),e){var c=n[a].types,f=c&&c[t.code];n[a]=o(a,e,n,s,f?[].concat(f,t.message):t.message)}r.shift()}return n},t=function(o,t,s){return void 0===s&&(s={}),function(i,a,u){try{return Promise.resolve(function(e,n){try{var a=Promise.resolve(o[\"sync\"===s.mode?\"parse\":\"parseAsync\"](i,t)).then(function(e){return u.shouldUseNativeValidation&&r({},u),{errors:{},values:s.raw?i:e}})}catch(r){return n(r)}return a&&a.then?a.then(void 0,n):a}(0,function(r){if(function(r){return Array.isArray(null==r?void 0:r.errors)}(r))return{values:{},errors:e(n(r.errors,!u.shouldUseNativeValidation&&\"all\"===u.criteriaMode),u)};throw r}))}catch(r){return Promise.reject(r)}}};export{t as zodResolver};\n//# sourceMappingURL=zod.module.js.map\n","import { zodResolver } from \"@hookform/resolvers/zod\";\nimport React, { forwardRef, useCallback, useEffect, useId } from \"react\";\nimport {\n  type DefaultValues,\n  FormProvider,\n  useForm,\n  type UseFormReturn,\n} from \"react-hook-form\";\nimport { z, type ZodObject } from \"zod\";\nimport { Button } from \"../Button/Button.js\";\nimport { ButtonGroup } from \"../Button/ButtonGroup.js\";\nimport { cn } from \"../classnames.js\";\nimport AlertSmall from \"../vendor/AlertSmall/AlertSmall.js\";\n\nconst OnSubmitErrorSchema = z.object({\n  message: z.string().trim().min(1),\n});\n\nexport type FormProps<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Schema extends ZodObject<any>,\n> = {\n  /**\n   * The text contents of the cancel button.\n   *\n   * @default Cancel\n   */\n  cancelButtonLabel?: string | undefined;\n\n  /**\n   * Content to render within the element.\n   *\n   * In advanced use cases you may specify a function that will be invoked to render your children.\n   * The render function receives an object that includes the internal form context object returned\n   * by `react-hook-form#useForm()`. Note that this functionality is advanced and not unstable, and\n   * it may change at any time.\n   *\n   * @experimental Passing a render function as children is unstable functionality.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: { context: UseFormReturn<z.infer<Schema>> }) => React.ReactNode)\n    | undefined;\n\n  /**\n   * A class property to attach to the element.\n   *\n   * @see {@link !Element.className}\n   */\n  className?: string | undefined;\n\n  /**\n   * A list of default class names that are applied to the form element. By default, the form is a\n   * flexbox with consistent gapping applied between each of its elements; if you need to disable\n   * this behavior, you can set this to `false`.\n   *\n   * @see {@link !Element.className}\n   */\n  defaultClassName?: string | string[] | false | undefined;\n\n  /**\n   * A set of initial values used to pre-fill the form.\n   */\n  defaultValues?: DefaultValues<z.infer<Schema>> | undefined;\n\n  /**\n   * A callback function invoked when a user clicks the \"Save\" button.\n   *\n   * The submit button is not displayed by default; you must pass the `onSubmit` props for it to\n   * appear.\n   */\n  onSubmit?: ((data: z.infer<Schema>) => Promise<void> | void) | undefined;\n\n  /**\n   * A callback function invoked when a user clicks the \"Cancel\" button.\n   *\n   * The cancel button is not displayed by default; you must pass the `onCancel` prop for it to\n   * appear.\n   */\n  onCancel?: (({ reset }: { reset: () => void }) => void) | undefined;\n\n  /**\n   * Whether or not the form should be disabled. When disabled, all form field children and any\n   * interactive elements (e.g. buttons) are disabled.\n   *\n   * @default false\n   */\n  disabled?: boolean | undefined;\n\n  /**\n   * By default, the form will automatically determine whether or not it's in a loading state. For\n   * example: The form will automatically enter a loading state during submission.\n   *\n   * You can override this behavior by explicitly specifying the `loading` prop.\n   */\n  loading?: boolean | undefined;\n\n  /**\n   * A Zod schema used to validate the form.\n   */\n  schema?: Schema | undefined;\n\n  /**\n   * The text contents of the submit button.\n   *\n   * @default Save\n   */\n  submitButtonLabel?: string | undefined;\n\n  /**\n   * An optional title for the form\n   */\n  title?: string | undefined;\n};\n\n/**\n * A `Form` collects information from a user.\n *\n * ![Form](./screenshots/form.png)\n *\n * @param props\n * @see {@link Checkbox}\n * @see {@link FormField}\n * @see {@link FormFieldSecret}\n * @see {@link Select}\n * @example\n * ```tsx\n * import { Form, FormField, FormFieldSecret } from \"@netlify/sdk/ui/react/components\";\n *\n * <Form onSubmit={(fields) => console.log(\"Form submitted.\", { fields })}>\n *   <FormField name=\"name\" label=\"Your Name\" required />\n *   <FormFieldSecret\n *     name=\"deepest_secret\"\n *     label=\"Your Deepest Secret\"\n *     required\n *   />\n *   <FormField name=\"explanation\" label=\"An Explanation\" type=\"textarea\" />\n *   <FormField type=\"number\" name=\"id_number\" label=\"Your Serial Number\" />\n * </Form>\n * ```\n */\nexport const Form = forwardRef(function Form<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Schema extends ZodObject<any>,\n>(\n  {\n    cancelButtonLabel = \"Cancel\",\n    children,\n    className,\n    defaultClassName = \"tw-flex tw-flex-col tw-gap-6\",\n    defaultValues,\n    disabled = false,\n    loading,\n    onCancel: originalOnCancel,\n    onSubmit: originalOnSubmit,\n    schema,\n    submitButtonLabel = \"Save\",\n    title,\n  }: FormProps<Schema>,\n  ref: React.ForwardedRef<HTMLFormElement>,\n) {\n  const formId = useId();\n\n  const methods = useForm({\n    defaultValues: defaultValues!,\n    disabled: disabled || loading,\n    resolver: schema !== undefined ? zodResolver(schema) : undefined,\n  });\n  const { clearErrors, control, formState, handleSubmit, setError, watch } =\n    methods;\n\n  // XXX(ndhoule): This fixes an issue where when the form is disabled the enabled again, the form's\n  // `formState.disabled` state remains `false`. I'm sure there's an issue somewhere in the RHF repo\n  // for this, but I haven't looked too hard yet.\n  useEffect(() => {\n    // Technically, we only need to call this in the event the form goes from disabled -> enabled.\n    // It's more straightforward to call it whenever the disabled state changes, though, and doesn't\n    // have any negative effect.\n    control._disableForm(disabled);\n  }, [control, disabled]);\n\n  useEffect(() => {\n    // When a user interacts with the form after a form-level error is set, clear the error.\n    const { unsubscribe } = watch((_data, { type }) => {\n      if (type === \"change\") {\n        clearErrors(\"root.onSubmit\");\n      }\n    });\n    return unsubscribe;\n  }, [clearErrors, watch]);\n\n  const onCancel = useCallback(() => {\n    originalOnCancel?.({ reset: methods.reset });\n  }, [originalOnCancel, methods.reset]);\n\n  const onSubmit = useCallback(\n    async (data: z.infer<Schema>) => {\n      try {\n        await originalOnSubmit?.(data);\n      } catch (err) {\n        let message = \"An unexpected error occurred while saving the form.\";\n        const errParseResult = OnSubmitErrorSchema.safeParse(err);\n        if (errParseResult.success) {\n          message = errParseResult.data.message;\n        }\n\n        setError(\"root.onSubmit\", { message });\n      }\n    },\n    [originalOnSubmit, setError],\n  );\n\n  const isFormLoading =\n    loading ?? (formState.isLoading || formState.isSubmitting);\n\n  return (\n    <FormProvider {...methods}>\n      <form\n        title={title}\n        aria-errormessage={`form-${formId}--root-error`}\n        aria-invalid={formState.errors.root?.[\"onSubmit\"] !== undefined}\n        className={cn(defaultClassName, className)}\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        onSubmit={handleSubmit(onSubmit)}\n        ref={ref}\n      >\n        {typeof children === \"function\"\n          ? children({ context: methods })\n          : children}\n\n        {/* Show a form-level error. This captures errors at the form level, e.g. uncaught errors\n            within onSubmit. Once an error is set, typing in the form or resubmitting will clear the\n            error. */}\n        {formState.errors.root?.[\"onSubmit\"]?.message !== undefined && (\n          <AlertSmall\n            id={`form-${formId}--root-error`}\n            error={formState.errors.root[\"onSubmit\"].message}\n          />\n        )}\n\n        <ButtonGroup>\n          {typeof onSubmit === \"function\" && (\n            <Button\n              disabled={formState.disabled || formState.isValidating}\n              loading={isFormLoading}\n              type=\"submit\"\n            >\n              {submitButtonLabel}\n            </Button>\n          )}\n          {typeof originalOnCancel === \"function\" && (\n            <Button\n              disabled={\n                formState.disabled || isFormLoading || formState.isValidating\n              }\n              level=\"secondary\"\n              onClick={onCancel}\n            >\n              {cancelButtonLabel}\n            </Button>\n          )}\n        </ButtonGroup>\n      </form>\n    </FormProvider>\n  );\n}) as <\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Schema extends ZodObject<any>,\n>(\n  props: FormProps<Schema> & {\n    ref?: React.ForwardedRef<HTMLFormElement> | undefined;\n  },\n) => JSX.Element;\n"],"names":["s","o","r","t","e","n","i","a","Form","zodResolver"],"mappings":"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","x_google_ignoreList":[0,1]}