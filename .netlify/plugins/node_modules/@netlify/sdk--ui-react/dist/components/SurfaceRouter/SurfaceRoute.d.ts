import { Surfaces } from '@netlify/sdk--ui-core';

export type SurfaceRouteProps = {
    /**
     * Content to render within the element.
     */
    children?: React.ReactNode | undefined;
    /**
     *
     *
     * @see {@link Surfaces}
     */
    surface: Surfaces;
};
/**
 * A component that, when used within a {@link SurfaceRouter `SurfaceRouter`}, conditionally renders
 * its children based on which surface the extension UI is currently rendering for the user.
 *
 * @param props
 * @see {@link SurfaceRouter}
 * @see {@link @netlify/sdk/react!Surfaces | Surfaces}
 * @example
 * ```tsx
 * import { Surfaces } from "@netlify/sdk/react";
 * import { SurfaceRoute, SurfaceRouter } from "@netlify/sdk/react/components";
 *
 * <SurfaceRouter>
 *   <SurfaceRoute surface={Surfaces.SiteConfiguration}>
 *     <SiteConfigurationSurface />
 *   </SurfaceRoute>
 * </SurfaceRouter>
 * ```
 */
export declare const SurfaceRoute: ({ children, surface }: SurfaceRouteProps) => import('react').ReactNode;
//# sourceMappingURL=SurfaceRoute.d.ts.map