import { asyncFilter, asyncMap, execPipe } from "iter-tools-es";
import {} from "./types.js";
// TODO(ndhoule): It's a little weird to combine the transform and the filter, split these into two
// different composable parts
export const withReaderTransform = (reader, transform) => {
    return {
        subscribe: (options) => {
            return execPipe(reader.subscribe(options), asyncMap(transform), asyncFilter((value) => value != null));
        },
    };
};
//# sourceMappingURL=transforms.js.map