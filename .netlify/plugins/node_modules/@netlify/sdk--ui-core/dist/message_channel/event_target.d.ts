import { type BaseMessage, type MessageReader, type MessageWriter } from "./types.js";
export type CreateEventTargetWriterOptions = {
    eventName?: string | undefined;
    signal?: AbortSignal | undefined;
    target: EventTarget;
};
export declare const createEventTargetWriter: <Message extends BaseMessage = {
    data: Record<string, unknown>;
    type: string;
}>({ eventName, signal, target, }: CreateEventTargetWriterOptions) => MessageWriter<Message>;
export type CreateEventTargetReaderOptions = {
    eventName?: string | undefined;
    signal?: AbortSignal | undefined;
    target: EventTarget;
};
export declare const createEventTargetReader: ({ eventName, signal: readerSignal, target, }: CreateEventTargetReaderOptions) => MessageReader;
//# sourceMappingURL=event_target.d.ts.map