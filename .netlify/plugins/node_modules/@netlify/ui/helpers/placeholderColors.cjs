"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const netlifyDesignTokens = require("@netlify/netlify-design-tokens");
const placeholderGradientColors = [
  { to: netlifyDesignTokens.colorFacetsBlue700, from: netlifyDesignTokens.colorFacetsBlue500 },
  { to: netlifyDesignTokens.colorFacetsPink500, from: netlifyDesignTokens.colorFacetsPink300 },
  { to: netlifyDesignTokens.colorFacetsPurple600, from: netlifyDesignTokens.colorFacetsPurple400 },
  { to: netlifyDesignTokens.colorFacetsGreen500, from: netlifyDesignTokens.colorFacetsGreen300 },
  { to: netlifyDesignTokens.colorFacetsRed600, from: netlifyDesignTokens.colorFacetsRed400 },
  { to: netlifyDesignTokens.colorFacetsTeal500, from: netlifyDesignTokens.colorFacetsTeal200 },
  { to: netlifyDesignTokens.colorFacetsGold500, from: netlifyDesignTokens.colorFacetsGold300 },
  { to: netlifyDesignTokens.colorFacetsBlue500, from: netlifyDesignTokens.colorFacetsBlue300 },
  { to: netlifyDesignTokens.colorFacetsTeal700, from: netlifyDesignTokens.colorFacetsTeal500 }
];
const getPlaceholderGradientColorsFromId = (id = "") => {
  if (!id || typeof id !== "string") {
    return placeholderGradientColors[0];
  }
  const idCharactersAsNumbers = id.split("").map((char) => Number(char)).reverse();
  const maxIndex = placeholderGradientColors.length - 1;
  const idInferredIndex = idCharactersAsNumbers.find(
    (charAsNum) => !isNaN(charAsNum) && charAsNum <= maxIndex
  ) ?? 0;
  return placeholderGradientColors[idInferredIndex];
};
exports.getPlaceholderGradientColorsFromId = getPlaceholderGradientColorsFromId;
//# sourceMappingURL=placeholderColors.cjs.map
