{"version":3,"file":"FormFieldSecret.js","sources":["../../../src/components/vendor/FormFieldSecret.tsx"],"sourcesContent":["import { capitalize, cn, DecorativeIcon } from \"@netlify/ui\";\nimport { forwardRef, useState } from \"react\";\nimport FormField from \"./FormField\";\n\nconst toggleStyles = cn(\n  \"!tw-bg-transparent\",\n  \"tw-border-none\",\n  \"tw-rounded-full\",\n  \"tw-flex\",\n  \"tw-justify-center\",\n  \"tw-items-center\",\n  \"tw-p-0\",\n  \"tw-outline-0\",\n  \"tw-h-6\",\n  \"tw-w-6\",\n  \"tw-text-inherit\",\n  \"focus-visible:tw-ring focus-visible:tw-ring-offset-1\",\n);\n\ninterface FormFieldSecretProps {\n  /**\n   * The name/type of the secret data, e.g. \"password\", \"CC number\".\n   * Appears as \"Show password\", \"Hide CC number\" etc.\n   */\n  accessibleCopyName?: string;\n  defaultRevealed?: boolean;\n  onToggleSecretClick?: (revealed: boolean) => void;\n  id?: string;\n  label: string;\n  [key: string]: unknown;\n  ariaLabelText?: string;\n  className?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n}\n\nconst FormFieldSecret = (\n  {\n    defaultRevealed = false,\n    accessibleCopyName = \"value\",\n    id,\n    onToggleSecretClick,\n    ariaLabelText = \"\",\n    className,\n    disabled,\n    readOnly,\n    ...rest\n  }: FormFieldSecretProps,\n  ref: React.Ref<HTMLInputElement>,\n) => {\n  const [derivedId] = useState(`nf_field_secret_${id ?? crypto.randomUUID()}`);\n  const [revealed, setRevealed] = useState(defaultRevealed);\n  const handleToggleSecret = () => {\n    setRevealed(!revealed);\n    onToggleSecretClick?.(revealed);\n  };\n\n  return (\n    <FormField\n      ref={ref}\n      {...rest}\n      className={cn(className, \"fs-exclude\")}\n      type={revealed ? \"text\" : \"password\"}\n      id={derivedId}\n      aria-label={\n        revealed\n          ? `${ariaLabelText}This value is revealed.`\n          : `${ariaLabelText}This value is hidden.`\n      }\n      disabled={disabled}\n      readOnly={readOnly}\n      data-hj-suppress\n      suffix={\n        !disabled &&\n        !readOnly && (\n          <>\n            <button\n              type=\"button\"\n              aria-controls={derivedId}\n              className={toggleStyles}\n              onClick={handleToggleSecret}\n              aria-label={\n                revealed\n                  ? `Hide ${accessibleCopyName}`\n                  : `Show ${accessibleCopyName}`\n              }\n            >\n              <DecorativeIcon name={revealed ? \"eye-closed\" : \"eye-open\"} />\n            </button>\n            {!ariaLabelText && (\n              <span className=\"tw-sr-only\" aria-live=\"polite\">\n                {revealed\n                  ? `${capitalize(accessibleCopyName)} is shown`\n                  : `${capitalize(accessibleCopyName)} is hidden`}\n              </span>\n            )}\n          </>\n        )\n      }\n    />\n  );\n};\n\nexport default forwardRef<HTMLInputElement, FormFieldSecretProps>(\n  FormFieldSecret,\n);\n"],"names":[],"mappings":";;;;AAIA,MAAM,eAAe;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAmBA,MAAM,kBAAkB,CACtB;AAAA,EACE,kBAAkB;AAAA,EAClB,qBAAqB;AAAA,EACrB;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GACA,QACG;AACH,QAAM,CAAC,SAAS,IAAI,SAAS,mBAAmB,MAAM,OAAO,WAAA,CAAY,EAAE;AAC3E,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,eAAe;AACxD,QAAM,qBAAqB,MAAM;AAC/B,gBAAY,CAAC,QAAQ;AACrB,+DAAsB;AAAA,EACxB;AAEA,SACE;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACC,GAAG;AAAA,MACJ,WAAW,GAAG,WAAW,YAAY;AAAA,MACrC,MAAM,WAAW,SAAS;AAAA,MAC1B,IAAI;AAAA,MACJ,cACE,WACI,GAAG,aAAa,4BAChB,GAAG,aAAa;AAAA,MAEtB;AAAA,MACA;AAAA,MACA,oBAAgB;AAAA,MAChB,QACE,CAAC,YACD,CAAC,YACC,qBAAA,UAAA,EACE,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,iBAAe;AAAA,YACf,WAAW;AAAA,YACX,SAAS;AAAA,YACT,cACE,WACI,QAAQ,kBAAkB,KAC1B,QAAQ,kBAAkB;AAAA,YAGhC,UAAA,oBAAC,gBAAA,EAAe,MAAM,WAAW,eAAe,WAAA,CAAY;AAAA,UAAA;AAAA,QAAA;AAAA,QAE7D,CAAC,iBACA,oBAAC,UAAK,WAAU,cAAa,aAAU,UACpC,UAAA,WACG,GAAG,WAAW,kBAAkB,CAAC,cACjC,GAAG,WAAW,kBAAkB,CAAC,aAAA,CACvC;AAAA,MAAA,EAAA,CAEJ;AAAA,IAAA;AAAA,EAAA;AAKV;AAEA,MAAA,sBAAe;AAAA,EACb;AACF;"}