export type SubscriptionData = {
    product_name: string;
    title: string;
    site_id?: string;
    amount: string | number;
};
export type ZuoraSubscriptionDetails = {
    id: string;
    title: string;
    product_name: string;
    domain_name?: string;
    base: boolean;
    amount: string | number;
    quantity: number;
    site_id?: string;
    site_name: string;
    site_domain?: string;
    start_date: string;
    end_date: string | null;
};
export type OrbSubscriptionBase = {
    id: string;
    amount: number;
    end_date: string | null;
    start_date: string;
    title: string;
};
export type OrbSubscriptionDomain = {
    id: string;
    invoice_number: string;
    invoice_date: string;
    due_date: string;
    amount: string;
    invoice_items: Array<{
        quantity: number;
        title: string;
    }>;
};
export type OrbSubscriptionUsage = {
    type: AccountSubscriptionType | SiteSubscriptionType;
    amount: number;
    quantity: number;
    included: number | boolean | null;
    sites: Array<{
        site_id: string;
        site_name: string;
        site_domain?: string | null;
    }>;
};
export type AccountSubscriptions = {
    baseSubscription: SubscriptionBaseInfo | null;
    accountSubscriptions: SubscriptionAccountsInfo[];
    domainSubscriptions: SubscriptionDomainInfo[];
    siteSubscriptions: SubscriptionSiteAddonsInfo[];
};
export type SubscriptionBaseInfo = {
    id: string;
    amount: string | number;
    start_date: string;
    end_date?: string | null;
    title: string;
};
export type SubscriptionAccountsInfo = {
    quantity: number;
    included: number;
    amount: number;
    type: AccountSubscriptionType | null;
};
export type SubscriptionSiteAddonsInfo = {
    type?: SiteSubscriptionType;
    amount: number;
    quantity: number;
    sites: Array<{
        site_id: string;
        site_name: string;
        site_domain?: string | null;
    }>;
};
export type SubscriptionDomainInfo = {
    id: string;
    due_date: string;
    amount: number;
    domain?: string;
};
declare const SUBSCRIPTIONS_ACCOUNT_USAGE: readonly ["bandwidth", "build_minutes", "edge_functions"];
declare const SUBSCRIPTIONS_ACCOUNT_ADDONS: readonly ["concurrent_builds", "members", "active_git_contributors"];
declare const SUBSCRIPTIONS_SITE_USAGE: readonly ["form_submissions", "functions"];
declare const SUBSCRIPTIONS_SITE_ADDONS: readonly ["identity", "analytics", "large_media"];
type AccountSubscriptionUsageType = (typeof SUBSCRIPTIONS_ACCOUNT_USAGE)[number];
type AccountSubscriptionAddonsType = (typeof SUBSCRIPTIONS_ACCOUNT_ADDONS)[number];
type AccountSubscriptionType = AccountSubscriptionAddonsType | AccountSubscriptionUsageType;
type SiteSubscriptionUsageType = (typeof SUBSCRIPTIONS_SITE_USAGE)[number];
type SiteSubscriptionAddonsType = (typeof SUBSCRIPTIONS_SITE_ADDONS)[number];
type SiteSubscriptionType = SiteSubscriptionUsageType | SiteSubscriptionAddonsType;
export declare const getSiteAddonsInfo: () => {
    feature: string;
    title: string;
    path: string;
    description: string;
    docsLink: string;
}[];
export declare const humanizeSubscriptionName: (subscriptionName: string) => string;
export declare const isSubscriptionUsageBased: (subscriptionName: string | null) => boolean;
export declare const getSubscriptionSiteUsage: (subscriptions: SubscriptionSiteAddonsInfo[]) => Array<{
    type: string;
    sites: number;
}>;
export declare const transformOrbSubscriptions: ({ base, domains, usage, }: {
    base?: OrbSubscriptionBase;
    domains: OrbSubscriptionDomain[];
    usage: OrbSubscriptionUsage[];
}) => AccountSubscriptions;
export declare const transformZuoraSubscriptions: (subscriptions?: ZuoraSubscriptionDetails[]) => AccountSubscriptions;
export {};
