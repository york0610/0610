export type ButtonButtonProps = {
    /**
     * Content to render within the element.
     */
    children?: React.ReactNode | undefined;
    /**
     * A class property to attach to the element.
     *
     * @see {@link !Element.className}
     */
    className?: string | undefined;
    /**
     * If `true`, the component is disabled.
     *
     * @default false
     */
    disabled?: boolean | undefined;
    /**
     * @default primary
     */
    level?: "primary" | "secondary" | "tertiary" | undefined;
    onClick?: React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement> | undefined;
    /**
     * If `true`, the component animates and is disabled.
     *
     * @default false
     */
    loading?: boolean | undefined;
    /**
     * @see {@link !HTMLButtonElement}
     * @default button
     */
    type?: React.ComponentPropsWithoutRef<"button">["type"];
    /**
     * @default standard
     */
    variant?: "standard" | "danger" | "pop" | undefined;
};
export type AnchorButtonProps = Omit<ButtonButtonProps, "type"> & {
    href?: React.ComponentPropsWithoutRef<"a">["href"] | undefined;
    rel?: React.ComponentPropsWithoutRef<"a">["rel"] | undefined;
    target?: React.ComponentPropsWithoutRef<"a">["target"] | undefined;
};
/**
 * @see {@link AnchorButtonProps}
 * @see {@link ButtonButtonProps}
 */
export type ButtonProps = AnchorButtonProps | ButtonButtonProps;
/**
 * Buttons are controls that let users take actions and confirm choices.
 *
 * ![Button](./screenshots/button.png)
 *
 * @param props
 * @see {@link ButtonGroup}
 * @see {@link !HTMLButtonElement}
 * @example
 * A Button can render as a standard `<button>` element:
 * ```tsx
 * import { Button } from "@netlify/sdk/react/components";
 *
 * <Button onClick={() => console.log("Clicked!")}>Click me!</Button>
 * ```
 * @example
 * A Button can also render as a link (`<a>`) element:
 * ```tsx
 * import { Button } from "@netlify/sdk/react/components";
 *
 * <Button href="https://www.google.com/">Google</Button>
 * ```
 */
export declare const Button: import('react').ForwardRefExoticComponent<ButtonProps & import('react').RefAttributes<HTMLAnchorElement | HTMLButtonElement>>;
//# sourceMappingURL=Button.d.ts.map