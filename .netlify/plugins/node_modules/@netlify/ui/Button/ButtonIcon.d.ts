import { default as React } from 'react';
import { IconName } from '../Icon/types';
import { ButtonLevel, ButtonSize, ButtonVariant } from './types';
export interface ButtonIconBasicProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    onClick?: (event: React.MouseEvent<HTMLElement>) => void;
    level?: ButtonLevel;
    variant?: ButtonVariant;
    size?: ButtonSize;
    saving?: boolean;
    disabled?: boolean;
    callForAttention?: boolean;
    outset?: string;
    width?: number;
    height?: number;
    activeClassName?: string;
    iconWrapperClassName?: string;
    /** To render an HTML link. */
    to?: string;
    /** To render an HTML link. */
    href?: string;
}
export interface ButtonIconWithChildrenProps extends ButtonIconBasicProps {
    children: React.ReactNode;
    iconName?: IconName;
    title?: string;
}
export interface ButtonIconWithoutChildrenProps extends ButtonIconBasicProps {
    iconName: IconName;
    title: string;
}
export type ButtonIconProps = ButtonIconWithChildrenProps | ButtonIconWithoutChildrenProps;
type Element = HTMLAnchorElement | HTMLButtonElement;
export declare const ButtonIcon: React.ForwardRefExoticComponent<ButtonIconProps & React.RefAttributes<Element>>;
export default ButtonIcon;
