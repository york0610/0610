{"version":3,"file":"placeholderColors.cjs","sources":["../../../../libs/ui/src/helpers/placeholderColors.ts"],"sourcesContent":["import {\n  colorFacetsBlue300,\n  colorFacetsBlue500,\n  colorFacetsBlue700,\n  colorFacetsGold300,\n  colorFacetsGold500,\n  colorFacetsGreen300,\n  colorFacetsGreen500,\n  colorFacetsPink300,\n  colorFacetsPink500,\n  colorFacetsPurple400,\n  colorFacetsPurple600,\n  colorFacetsRed400,\n  colorFacetsRed600,\n  colorFacetsTeal200,\n  colorFacetsTeal500,\n  colorFacetsTeal700,\n} from '@netlify/netlify-design-tokens';\n\nconst placeholderGradientColors = [\n  { to: colorFacetsBlue700, from: colorFacetsBlue500 },\n  { to: colorFacetsPink500, from: colorFacetsPink300 },\n  { to: colorFacetsPurple600, from: colorFacetsPurple400 },\n  { to: colorFacetsGreen500, from: colorFacetsGreen300 },\n  { to: colorFacetsRed600, from: colorFacetsRed400 },\n  { to: colorFacetsTeal500, from: colorFacetsTeal200 },\n  { to: colorFacetsGold500, from: colorFacetsGold300 },\n  { to: colorFacetsBlue500, from: colorFacetsBlue300 },\n  { to: colorFacetsTeal700, from: colorFacetsTeal500 },\n];\n\nexport const getPlaceholderGradientColorsFromId = (id = '') => {\n  if (!id || typeof id !== 'string') {\n    return placeholderGradientColors[0];\n  }\n\n  // We don't fully randomise the color selection; in some cases like Organizations/Teams, there may be more than one placeholder instance\n  // across the app, and we want them all to use a consistent color. We instead use the item's ID as the basis for color selection.\n  const idCharactersAsNumbers = id\n    .split('')\n    .map((char) => Number(char))\n    .reverse();\n\n  const maxIndex = placeholderGradientColors.length - 1;\n  const idInferredIndex =\n    idCharactersAsNumbers.find(\n      (charAsNum) => !isNaN(charAsNum) && charAsNum <= maxIndex\n    ) ?? 0;\n\n  return placeholderGradientColors[idInferredIndex];\n};\n"],"names":["colorFacetsBlue700","colorFacetsBlue500","colorFacetsPink500","colorFacetsPink300","colorFacetsPurple600","colorFacetsPurple400","colorFacetsGreen500","colorFacetsGreen300","colorFacetsRed600","colorFacetsRed400","colorFacetsTeal500","colorFacetsTeal200","colorFacetsGold500","colorFacetsGold300","colorFacetsBlue300","colorFacetsTeal700"],"mappings":";;;AAmBA,MAAM,4BAA4B;AAAA,EAChC,EAAE,IAAIA,oBAAAA,oBAAoB,MAAMC,uCAAmB;AAAA,EACnD,EAAE,IAAIC,oBAAAA,oBAAoB,MAAMC,uCAAmB;AAAA,EACnD,EAAE,IAAIC,oBAAAA,sBAAsB,MAAMC,yCAAqB;AAAA,EACvD,EAAE,IAAIC,oBAAAA,qBAAqB,MAAMC,wCAAoB;AAAA,EACrD,EAAE,IAAIC,oBAAAA,mBAAmB,MAAMC,sCAAkB;AAAA,EACjD,EAAE,IAAIC,oBAAAA,oBAAoB,MAAMC,uCAAmB;AAAA,EACnD,EAAE,IAAIC,oBAAAA,oBAAoB,MAAMC,uCAAmB;AAAA,EACnD,EAAE,IAAIZ,oBAAAA,oBAAoB,MAAMa,uCAAmB;AAAA,EACnD,EAAE,IAAIC,wCAAoB,MAAML,oBAAmB,mBAAA;AACrD;AAEa,MAAA,qCAAqC,CAAC,KAAK,OAAO;AAC7D,MAAI,CAAC,MAAM,OAAO,OAAO,UAAU;AACjC,WAAO,0BAA0B,CAAC;AAAA,EAAA;AAKpC,QAAM,wBAAwB,GAC3B,MAAM,EAAE,EACR,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,EAC1B,QAAQ;AAEL,QAAA,WAAW,0BAA0B,SAAS;AACpD,QAAM,kBACJ,sBAAsB;AAAA,IACpB,CAAC,cAAc,CAAC,MAAM,SAAS,KAAK,aAAa;AAAA,EAAA,KAC9C;AAEP,SAAO,0BAA0B,eAAe;AAClD;;"}