{"version":3,"file":"ClipboardButton.js","sources":["../../../../src/components/vendor/ClipboardButton/ClipboardButton.tsx"],"sourcesContent":["import { Button, ButtonIcon, cn } from \"@netlify/ui\";\nimport type { ReactElement } from \"react\";\nimport React, { useState } from \"react\";\n\nconst FEEDBACK_TIMEOUT_IN_MILLIS = 2000;\n\nexport const ClipboardWrapperCN = (\n  icon: boolean,\n  className: string | undefined,\n) =>\n  cn(\n    \"tw-relative\",\n    \"tw-inline-block\",\n    icon ? \"tw-w-auto\" : \"tw-w-full md:tw-w-auto\",\n    className,\n  );\n\nconst ClipboardAlertCN = ({ feedback }: { feedback: string | null }) =>\n  cn(\n    \"tw-block\",\n    \"tw-absolute\",\n    \"tw-bg-black\",\n    \"tw-text-white\",\n    \"tw-p-2\",\n    \"tw-rounded-sm\",\n    \"tw-text-xs\",\n    \"tw-top-0\",\n    \"tw-left-1/2\",\n    \"tw-opacity-0\",\n    \"tw-w-max\",\n    \"dark:tw-border\",\n    \"dark:tw-border-gray-dark\",\n    feedback && \"tw-animate-pop-up\",\n  );\n\nexport const feedbackPopup = (feedback: string | null) => {\n  return (\n    <div role=\"alert\" className={ClipboardAlertCN({ feedback })}>\n      {feedback}\n    </div>\n  );\n};\n\nexport interface ClipboardButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  icon?: boolean;\n  link?: string | ReactElement;\n  value: string;\n  title?: string;\n  tooltip?: string;\n  onClick?: () => void;\n  className?: string;\n  /**\n   * @default \"secondary\"\n   */\n  level?: \"primary\" | \"secondary\" | \"tertiary\" | undefined;\n}\n\nconst ClipboardButton = ({\n  disabled = false,\n  icon = true,\n  link,\n  value,\n  title = \"Copy to clipboard\",\n  tooltip = \"Copied!\",\n  onClick,\n  className,\n  level = \"secondary\",\n}: ClipboardButtonProps) => {\n  const [feedback, setFeedback] = useState<string | null>(null);\n\n  const handleSuccess = () => {\n    setFeedback(tooltip);\n    setTimeout(() => {\n      setFeedback(null);\n    }, FEEDBACK_TIMEOUT_IN_MILLIS);\n  };\n\n  const handleError = () => {\n    setFeedback(\"Couldn't copy text to clipboard\");\n  };\n\n  const handleClick = () => {\n    if (!value) {\n      return;\n    }\n\n    void (async () => {\n      try {\n        await navigator.clipboard.writeText(value);\n        if (onClick) {\n          onClick();\n        }\n        handleSuccess();\n      } catch {\n        handleError();\n      }\n    })();\n  };\n\n  return (\n    <div className={ClipboardWrapperCN(icon, className)}>\n      {feedback && feedbackPopup(feedback)}\n      {icon ? (\n        <ButtonIcon\n          disabled={disabled}\n          level={level}\n          iconName=\"copy-clipboard\"\n          onClick={handleClick}\n          title={title}\n        />\n      ) : link ? (\n        <button\n          className=\"link\"\n          disabled={disabled}\n          onClick={handleClick}\n          title={title}\n        >\n          {link}\n        </button>\n      ) : (\n        <Button disabled={disabled} level={level} onClick={handleClick}>\n          {title}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ClipboardButton;\n"],"names":[],"mappings":";;;AAIA,MAAM,6BAA6B;AAE5B,MAAM,qBAAqB,CAChC,MACA,cAEA;AAAA,EACE;AAAA,EACA;AAAA,EACA,OAAO,cAAc;AAAA,EACrB;AACF;AAEF,MAAM,mBAAmB,CAAC,EAAE,SAAA,MAC1B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd;AAEK,MAAM,gBAAgB,CAAC,aAA4B;AACxD,SACE,oBAAC,OAAA,EAAI,MAAK,SAAQ,WAAW,iBAAiB,EAAE,SAAA,CAAU,GACvD,UAAA,SAAA,CACH;AAEJ;AAiBA,MAAM,kBAAkB,CAAC;AAAA,EACvB,WAAW;AAAA,EACX,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA,QAAQ;AACV,MAA4B;AAC1B,QAAM,CAAC,UAAU,WAAW,IAAI,SAAwB,IAAI;AAE5D,QAAM,gBAAgB,MAAM;AAC1B,gBAAY,OAAO;AACnB,eAAW,MAAM;AACf,kBAAY,IAAI;AAAA,IAClB,GAAG,0BAA0B;AAAA,EAC/B;AAEA,QAAM,cAAc,MAAM;AACxB,gBAAY,iCAAiC;AAAA,EAC/C;AAEA,QAAM,cAAc,MAAM;AACxB,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,UAAM,YAAY;AAChB,UAAI;AACF,cAAM,UAAU,UAAU,UAAU,KAAK;AACzC,YAAI,SAAS;AACX,kBAAA;AAAA,QACF;AACA,sBAAA;AAAA,MACF,QAAQ;AACN,oBAAA;AAAA,MACF;AAAA,IACF,GAAA;AAAA,EACF;AAEA,8BACG,OAAA,EAAI,WAAW,mBAAmB,MAAM,SAAS,GAC/C,UAAA;AAAA,IAAA,YAAY,cAAc,QAAQ;AAAA,IAClC,OACC;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,UAAS;AAAA,QACT,SAAS;AAAA,QACT;AAAA,MAAA;AAAA,IAAA,IAEA,OACF;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QAEC,UAAA;AAAA,MAAA;AAAA,IAAA,IAGH,oBAAC,QAAA,EAAO,UAAoB,OAAc,SAAS,aAChD,UAAA,MAAA,CACH;AAAA,EAAA,GAEJ;AAEJ;"}