/*
 * The DISDISCONNECT_PROVIDER message should be sent when the surface wants to remove the extension
 * instance's provider OAuth connection.
 */
import { z } from "zod";
export const UI_EXTENSION_SURFACE_DISCONNECT_PROVIDER_EVENT_TYPE = "NF::EUI_SURFACE::DISCONNECT_PROVIDER";
export const UIExtensionSurfaceDisconnectProviderEventSchema = z.object({
    type: z.literal(UI_EXTENSION_SURFACE_DISCONNECT_PROVIDER_EVENT_TYPE),
    data: z
        .object({
        connectionID: z
            .string()
            .min(1)
            .trim()
            .nullable()
            .optional()
            .default(null),
    })
        .optional()
        .default(() => ({})),
});
export const createUIExtensionSurfaceDisconnectProviderEvent = (data = {
    connectionID: null,
}) => ({
    type: UI_EXTENSION_SURFACE_DISCONNECT_PROVIDER_EVENT_TYPE,
    data,
});
//# sourceMappingURL=disconnect_provider.js.map