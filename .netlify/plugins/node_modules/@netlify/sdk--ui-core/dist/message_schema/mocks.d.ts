import fc from "fast-check";
import { Surfaces } from "../surfaces.js";
import { type UIExtensionHostInitializeEvent } from "./main.js";
export declare const SurfaceArbitrary: fc.Arbitrary<Surfaces>;
export declare const UIExtensionHostInitializeEventDataContextAuthArbitrary: fc.Arbitrary<{
    netlifyToken: string | null;
    providerToken: string | null;
    providerTokens: {
        externalId: string;
        token: string;
        connectionId: string;
    }[];
}>;
export declare const UIExtensionHostInitializeEventDataContextUserArbitrary: fc.Arbitrary<{
    id: string | null;
}>;
export declare const UIExtensionHostInitializeEventDataContextVisualEditorArbitrary: fc.Arbitrary<{
    webhookBaseURL: string | null;
    projectId: string | null;
    notifyVisualEditor: boolean | null;
}>;
export declare const UIExtensionHostInitializeEventDataContextArbitrary: fc.Arbitrary<{
    auth: {
        netlifyToken: string | null;
        providerToken: string | null;
        providerTokens: {
            externalId: string;
            token: string;
            connectionId: string;
        }[];
    };
    user: {
        id: string | null;
    };
    visualEditor: {
        webhookBaseURL: string | null;
        projectId: string | null;
        notifyVisualEditor: boolean | null;
    };
    projectId: string | null;
    configurationId: string | null;
    dataLayerId: string | null;
    siteId: string | null;
    teamId: string | null;
    accountId: string | null;
    theme: "light" | "dark";
    deployId: string | null;
}>;
export declare const UIExtensionHostInitializeEventDataExtensionArbitrary: fc.Arbitrary<{
    id: string;
    name: string;
    slug: string;
}>;
export declare const UIExtensionHostInitializeEventDataSurfaceArbitrary: fc.Arbitrary<{
    name: Surfaces;
}>;
export declare const UIExtensionHostInitializeEventDataArbitrary: fc.Arbitrary<{
    context: {
        auth: {
            netlifyToken: string | null;
            providerToken: string | null;
            providerTokens: {
                externalId: string;
                token: string;
                connectionId: string;
            }[];
        };
        user: {
            id: string | null;
        };
        visualEditor: {
            webhookBaseURL: string | null;
            projectId: string | null;
            notifyVisualEditor: boolean | null;
        };
        projectId: string | null;
        configurationId: string | null;
        dataLayerId: string | null;
        siteId: string | null;
        teamId: string | null;
        accountId: string | null;
        theme: "light" | "dark";
        deployId: string | null;
    };
    extension: {
        id: string;
        name: string;
        slug: string;
    };
    surface: {
        name: Surfaces;
    };
}>;
export declare const UIExtensionHostInitializeEventArbitrary: fc.Arbitrary<{
    data: {
        context: {
            auth: {
                netlifyToken: string | null;
                providerToken: string | null;
                providerTokens: {
                    externalId: string;
                    token: string;
                    connectionId: string;
                }[];
            };
            user: {
                id: string | null;
            };
            visualEditor: {
                webhookBaseURL: string | null;
                projectId: string | null;
                notifyVisualEditor: boolean | null;
            };
            projectId: string | null;
            configurationId: string | null;
            dataLayerId: string | null;
            siteId: string | null;
            teamId: string | null;
            accountId: string | null;
            theme: "light" | "dark";
            deployId: string | null;
        };
        extension: {
            id: string;
            name: string;
            slug: string;
        };
        surface: {
            name: Surfaces;
        };
    };
    type: "NF::EUI_HOST::INITIALIZE";
}>;
export declare const createMockUIExtensionHostInitializeEvent: (overrides?: Partial<UIExtensionHostInitializeEvent>) => UIExtensionHostInitializeEvent;
//# sourceMappingURL=mocks.d.ts.map