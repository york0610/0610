import { default as React } from 'react';

export declare const getInitialSelectedOption: <T>(options: DropdownOption<T>[], initial?: DropdownOption<T> | number | undefined) => DropdownOption<T> | undefined;
export type DropdownOption<T = unknown> = {
    /**
     * A human-readable element rendered to represent the option.
     */
    label: React.ReactNode;
    /**
     * The programmatic value used when the option is selected.
     */
    value?: T | undefined;
    /**
     *
     *
     * @default standard
     */
    variant?: "standard" | "danger" | undefined;
};
export type DropdownProps<T> = {
    /**
     * A class property to attach to the element.
     *
     * @see {@link !Element.className}
     */
    className?: string | undefined;
    /**
     * If `true`, the component is disabled.
     *
     * @default false
     */
    disabled?: boolean | undefined;
    /**
     * An option or an index of an option from `options` to select on first render.
     */
    initialSelectedOption?: DropdownOption<T> | number | undefined;
    /**
     * A callback invoked when an option is selected.
     */
    onChange?: ((option: DropdownOption<T> | null) => void) | undefined;
    /**
     * A list of options to render in the dropdown.
     */
    options?: DropdownOption<T>[] | undefined;
    /**
     * A visual element rendered next to the current selected option in the dropdown menu. To disable
     * the indicator, specify `null`.
     *
     * Currently, only disabling the indicator is supported.
     */
    selectedOptionIndicator?: null | undefined;
    /**
     * Display a static value in place of the the dropdown toggle button (in place of the current
     * selected option).
     */
    toggle?: {
        label?: React.ReactNode | undefined;
    } | undefined;
};
/**
 * Dropdowns let users select from a list of options.
 *
 * <!-- TODO(ndhoule): Add a screenshot here -->
 *
 * @param props
 * @internal
 * @example
 * ```ts
 * import { Dropdown } from "@netlify/sdk/react/components";
 *
 * <Dropdown
 *   options=[
 *     { label: "Pomeranian", value: "pomeranian" },
 *     { label: "Golden Retriever", value: "golden-retriever" },
 *     { label: "Doge", value: "shiba-inu" },
 *   ]
 * />
 * ```
 */
export declare const Dropdown: <T>(props: DropdownProps<T> & {
    ref?: React.ForwardedRef<HTMLElement> | undefined;
}) => JSX.Element;
//# sourceMappingURL=Dropdown.d.ts.map