import memoize from "moize/mjs/index.mjs";
import fs from "node:fs";
import path from "node:path";
import { fileURLToPath } from "node:url";
import escalade from "escalade/sync";
import baseNormalizePackageJSON from "normalize-package-data";
const normalizePackageJSON = (value) => {
    const cloned = structuredClone(value);
    baseNormalizePackageJSON(cloned);
    return cloned;
};
export const getPackageVersion = memoize(() => {
    const packageJSONPath = escalade(path.dirname(fileURLToPath(import.meta.url)), (dir, filenames) => {
        if (path.basename(dir) === "sdk" && filenames.includes("package.json")) {
            return "package.json";
        }
    }) ?? "";
    try {
        if (packageJSONPath === "") {
            throw new Error("failed to resolve @netlify/sdk version from package manifest");
        }
        const packageJSON = JSON.parse(fs.readFileSync(packageJSONPath, "utf-8"));
        return normalizePackageJSON(packageJSON).version;
    }
    catch (err) {
        throw new Error("Failed to resolve @netlify/sdk version. Please contact Netlify for assistance.", { cause: err });
    }
});
//# sourceMappingURL=package-version.js.map