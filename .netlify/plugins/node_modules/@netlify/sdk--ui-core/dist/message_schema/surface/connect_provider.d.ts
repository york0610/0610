import { z } from "zod";
export declare const UI_EXTENSION_SURFACE_CONNECT_PROVIDER_EVENT_TYPE = "NF::EUI_SURFACE::CONNECT_PROVIDER";
export declare const UIExtensionSurfaceConnectProviderEventSchema: z.ZodObject<{
    type: z.ZodLiteral<"NF::EUI_SURFACE::CONNECT_PROVIDER">;
    data: z.ZodDefault<z.ZodOptional<z.ZodObject<{
        additionalAuthURLQueryParams: z.ZodDefault<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    }, "strip", z.ZodTypeAny, {
        additionalAuthURLQueryParams: Record<string, string>;
    }, {
        additionalAuthURLQueryParams?: Record<string, string> | undefined;
    }>>>;
}, "strip", z.ZodTypeAny, {
    data: {
        additionalAuthURLQueryParams: Record<string, string>;
    };
    type: "NF::EUI_SURFACE::CONNECT_PROVIDER";
}, {
    type: "NF::EUI_SURFACE::CONNECT_PROVIDER";
    data?: {
        additionalAuthURLQueryParams?: Record<string, string> | undefined;
    } | undefined;
}>;
export type UIExtensionSurfaceConnectProviderEvent = z.output<typeof UIExtensionSurfaceConnectProviderEventSchema>;
export declare const createUIExtensionSurfaceConnectProviderEvent: (data?: UIExtensionSurfaceConnectProviderEvent["data"]) => UIExtensionSurfaceConnectProviderEvent;
//# sourceMappingURL=connect_provider.d.ts.map